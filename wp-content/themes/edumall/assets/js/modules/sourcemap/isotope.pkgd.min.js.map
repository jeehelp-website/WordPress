{"version":3,"sources":["isotope.pkgd.js"],"names":["window","factory","define","amd","jQuery","module","exports","require","jQueryBridget","arraySlice","Array","prototype","slice","console","logError","message","error","namespace","PluginClass","$","option","opts","isPlainObject","this","options","extend","fn","arg0","each","i","elem","instance","data","_init","methodName","args","returnValue","pluginMethodStr","call","arguments","$elems","method","charAt","value","apply","undefined","updateJQuery","bridget","global","EvEmitter","proto","on","eventName","listener","events","_events","listeners","indexOf","push","once","onceEvents","_onceEvents","off","length","index","splice","emitEvent","onceListeners","allOff","getSize","getStyleSize","num","parseFloat","isNaN","measurements","measurementsLength","getStyle","style","getComputedStyle","isBoxSizeOuter","isSetup","div","document","createElement","width","padding","borderStyle","borderWidth","boxSizing","body","documentElement","appendChild","Math","round","removeChild","querySelector","nodeType","display","size","height","innerWidth","innerHeight","outerWidth","outerHeight","getZeroSize","offsetWidth","offsetHeight","isBorderBox","measurement","paddingWidth","paddingLeft","paddingRight","paddingHeight","paddingTop","paddingBottom","marginWidth","marginLeft","marginRight","marginHeight","marginTop","marginBottom","borderLeftWidth","borderRightWidth","borderHeight","borderTopWidth","borderBottomWidth","isBorderBoxSizeOuter","styleWidth","styleHeight","matchesSelector","matchesMethod","ElemProto","Element","matches","prefixes","selector","fizzyUIUtils","utils","a","b","prop","modulo","makeArray","obj","isArray","removeFrom","ary","getParent","parentNode","getQueryElement","handleEvent","event","type","filterFindElements","elems","ffElems","forEach","HTMLElement","nodeName","childElems","querySelectorAll","debounceMethod","_class","threshold","timeoutName","timeout","clearTimeout","_this","setTimeout","docReady","callback","readyState","addEventListener","toDashed","str","replace","match","$1","$2","toLowerCase","htmlInit","WidgetClass","dashedNamespace","dataAttr","dataAttrElems","jsDashElems","concat","dataOptionsAttr","attr","getAttribute","JSON","parse","className","Outlayer","Item","docElemStyle","transitionProperty","transition","transformProperty","transform","transitionEndEvent","WebkitTransition","vendorProperties","transitionDuration","transitionDelay","element","layout","position","x","y","_create","Object","create","constructor","_transn","ingProperties","clean","onEnd","css","elemStyle","getPosition","isOriginLeft","_getOption","isOriginTop","xValue","yValue","layoutSize","layoutPosition","xPadding","xProperty","xResetProperty","getXValue","yPadding","yProperty","yResetProperty","getYValue","isHorizontal","percentPosition","_transitionTo","curX","curY","didNotMove","setPosition","isTransitioning","transX","transY","transitionStyle","getTranslate","to","onTransitionEnd","isCleaning","goTo","moveTo","_nonTransition","_removeStyles","_transition","from","h","enableTransition","transitionProps","duration","staggerDelay","onwebkitTransitionEnd","ontransitionend","onotransitionend","dashedVendorProperties","-webkit-transform","propertyName","target","isEmptyObj","disableTransition","removeTransitionStyles","removeEventListener","cleanStyle","cleanTransitionStyle","stagger","delay","removeElem","remove","hide","reveal","isHidden","getHideRevealTransitionEndProperty","onRevealTransitionEnd","hiddenStyle","visibleStyle","styleProperty","optionStyle","opacity","onHideTransitionEnd","destroy","left","right","top","bottom","noop","GUID","instances","queryElement","$element","defaults","id","outlayerGUID","containerStyle","initLayout","originLeft","originTop","resize","resizeContainer","subclass","Parent","SubClass","oldOption","compatOptions","horizontal","layoutInstant","reloadItems","stamps","stamp","bindResize","items","_itemize","children","itemElems","_filterFindItemElements","item","itemSelector","getItemElements","map","_resetLayout","_manageStamps","isInstant","_isLayoutInited","layoutItems","_getMeasurement","_getItemsForLayout","_layoutItems","_postLayout","filter","isIgnored","queue","_emitCompleteOnItems","_getItemLayoutPosition","isLayoutInstant","_processLayoutQueue","updateStagger","_positionItem","time","unit","mult","msUnits","getMilliseconds","_getContainerSize","_setContainerMeasure","measure","isWidth","elemSize","max","onComplete","dispatchEvent","doneCount","count","tick","emitArgs","$event","Event","trigger","ignore","getItem","unignore","_find","unstamp","_getBoundingRect","_manageStamp","boundingRect","getBoundingClientRect","_boundingRect","_getElementOffset","thisRect","isResizeBound","unbindResize","onresize","needsResizeLayout","addItems","appended","prepended","previousItems","revealItemElements","getItems","hideItemElements","removeItems","removeData","Layout","ms","s","Isotope","itemGUID","sortData","updateSortData","random","key","getSortData","sorters","_sorters","sorter","_destroy","LayoutMode","isotope","filteredItems","needsVerticalResizeLayout","getColumnWidth","getSegmentSize","getRowHeight","segment","segmentName","outerSize","firstItemSize","getFirstItemSize","firstItem","modes","Mode","Masonry","fitWidth","measureColumns","colYs","cols","maxY","horizontalColIndex","getContainerWidth","columnWidth","firstItemElem","containerWidth","gutter","excess","container","remainder","colSpan","min","colPosition","horizontalOrder","col","setHeight","setMax","_getTopColPosition","colGroup","_getTopColGroup","minimumY","groupCount","_getColGroupY","groupColYs","_getHorizontalColPosition","hasSize","stampSize","offset","firstX","lastX","firstCol","floor","lastCol","stampMaxY","_getContainerFitWidth","unusedCols","previousWidth","MasonryMode","keepModeMethods","isFitWidth","FitRows","itemWidth","Vertical","horizontalAlignment","trim","String","layoutMode","isJQueryFiltering","sortAscending","name","_getSorters","sortHistory","_initLayoutMode","_updateItemsSortData","initialOpts","_layout","arrange","_getIsInstant","filtered","_filter","_bindArrangeComplete","_isInstant","_noTransition","_hideReveal","_sort","needReveal","needHide","isLayoutComplete","isHideComplete","isRevealComplete","arrangeParallelCallback","hiddenMatched","visibleUnmatched","test","_getFilterTest","isMatched","is","mungeSorter","len","split","query","attrMatch","getValue","child","textContent","getValueGetter","parser","sortDataParsers","parseInt","val","itemSorter","sortBys","sortAsc","sortBy","_getIsSameSortBy","itemA","itemB","sort","_mode","mode","Error","_filterRevealAdded","insert","filteredInsertItems","_remove","shuffle","getFilteredItemElements"],"mappings":"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","file":"../../isotope.pkgd.min.js","sourcesContent":["/*\n * Isotope PACKAGED v3.0.6\n *\n * Licensed GPLv3 for open source use\n * or Isotope Commercial License for commercial use\n *\n * https://isotope.metafizzy.co\n * Copyright 2010-2018 Metafizzy\n *\n * Edited by Edumall to fix Elementor compatible.\n */\n\n/**\n * Bridget makes jQuery widgets\n * v2.0.1\n * MIT license\n */\n\n/* jshint browser: true, strict: true, undef: true, unused: true */\n\n( function( window, factory ) {\n\t// universal module definition\n\t/*jshint strict: false */ /* globals define, module, require */\n\tif ( typeof define == 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( 'jquery-bridget/jquery-bridget',[ 'jquery' ], function( jQuery ) {\n\t\t\treturn factory( window, jQuery );\n\t\t});\n\t} else if ( typeof module == 'object' && module.exports ) {\n\t\t// CommonJS\n\t\tmodule.exports = factory(\n\t\t\twindow,\n\t\t\trequire('jquery')\n\t\t);\n\t} else {\n\t\t// browser global\n\t\twindow.jQueryBridget = factory(\n\t\t\twindow,\n\t\t\twindow.jQuery\n\t\t);\n\t}\n\n}( window, function factory( window, jQuery ) {\n\t'use strict';\n\n// ----- utils ----- //\n\n\tvar arraySlice = Array.prototype.slice;\n\n// helper function for logging errors\n// $.error breaks jQuery chaining\n\tvar console = window.console;\n\tvar logError = typeof console == 'undefined' ? function() {} :\n\t\tfunction( message ) {\n\t\t\tconsole.error( message );\n\t\t};\n\n// ----- jQueryBridget ----- //\n\n\tfunction jQueryBridget( namespace, PluginClass, $ ) {\n\t\t$ = $ || jQuery || window.jQuery;\n\t\tif ( !$ ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// add option method -> $().plugin('option', {...})\n\t\tif ( !PluginClass.prototype.option ) {\n\t\t\t// option setter\n\t\t\tPluginClass.prototype.option = function( opts ) {\n\t\t\t\t// bail out if not an object\n\t\t\t\tif ( !$.isPlainObject( opts ) ){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.options = $.extend( true, this.options, opts );\n\t\t\t};\n\t\t}\n\n\t\t// make jQuery plugin\n\t\t$.fn[ namespace ] = function( arg0 /*, arg1 */ ) {\n\t\t\tif ( typeof arg0 == 'string' ) {\n\t\t\t\t// method call $().plugin( 'methodName', { options } )\n\t\t\t\t// shift arguments by 1\n\t\t\t\tvar args = arraySlice.call( arguments, 1 );\n\t\t\t\treturn methodCall( this, arg0, args );\n\t\t\t}\n\t\t\t// just $().plugin({ options })\n\t\t\tplainCall( this, arg0 );\n\t\t\treturn this;\n\t\t};\n\n\t\t// $().plugin('methodName')\n\t\tfunction methodCall( $elems, methodName, args ) {\n\t\t\tvar returnValue;\n\t\t\tvar pluginMethodStr = '$().' + namespace + '(\"' + methodName + '\")';\n\n\t\t\t$elems.each( function( i, elem ) {\n\t\t\t\t// get instance\n\t\t\t\tvar instance = $.data( elem, namespace );\n\t\t\t\tif ( !instance ) {\n\t\t\t\t\tlogError( namespace + ' not initialized. Cannot call methods, i.e. ' +\n\t\t\t\t\t          pluginMethodStr );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar method = instance[ methodName ];\n\t\t\t\tif ( !method || methodName.charAt(0) == '_' ) {\n\t\t\t\t\tlogError( pluginMethodStr + ' is not a valid method' );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// apply method, get return value\n\t\t\t\tvar value = method.apply( instance, args );\n\t\t\t\t// set return value if value is returned, use only first value\n\t\t\t\treturnValue = returnValue === undefined ? value : returnValue;\n\t\t\t});\n\n\t\t\treturn returnValue !== undefined ? returnValue : $elems;\n\t\t}\n\n\t\tfunction plainCall( $elems, options ) {\n\t\t\t$elems.each( function( i, elem ) {\n\t\t\t\tvar instance = $.data( elem, namespace );\n\t\t\t\tif ( instance ) {\n\t\t\t\t\t// set options & init\n\t\t\t\t\tinstance.option( options );\n\t\t\t\t\tinstance._init();\n\t\t\t\t} else {\n\t\t\t\t\t// initialize new instance\n\t\t\t\t\tinstance = new PluginClass( elem, options );\n\t\t\t\t\t$.data( elem, namespace, instance );\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tupdateJQuery( $ );\n\n\t}\n\n// ----- updateJQuery ----- //\n\n// set $.bridget for v1 backwards compatibility\n\tfunction updateJQuery( $ ) {\n\t\tif ( !$ || ( $ && $.bridget ) ) {\n\t\t\treturn;\n\t\t}\n\t\t$.bridget = jQueryBridget;\n\t}\n\n\tupdateJQuery( jQuery || window.jQuery );\n\n// -----  ----- //\n\n\treturn jQueryBridget;\n\n}));\n\n/**\n * EvEmitter v1.1.0\n * Lil' event emitter\n * MIT License\n */\n\n/* jshint unused: true, undef: true, strict: true */\n\n( function( global, factory ) {\n\t// universal module definition\n\t/* jshint strict: false */ /* globals define, module, window */\n\tif ( typeof define == 'function' && define.amd ) {\n\t\t// AMD - RequireJS\n\t\tdefine( 'ev-emitter/ev-emitter',factory );\n\t} else if ( typeof module == 'object' && module.exports ) {\n\t\t// CommonJS - Browserify, Webpack\n\t\tmodule.exports = factory();\n\t} else {\n\t\t// Browser globals\n\t\tglobal.EvEmitter = factory();\n\t}\n\n}( typeof window != 'undefined' ? window : this, function() {\n\n\n\n\tfunction EvEmitter() {}\n\n\tvar proto = EvEmitter.prototype;\n\n\tproto.on = function( eventName, listener ) {\n\t\tif ( !eventName || !listener ) {\n\t\t\treturn;\n\t\t}\n\t\t// set events hash\n\t\tvar events = this._events = this._events || {};\n\t\t// set listeners array\n\t\tvar listeners = events[ eventName ] = events[ eventName ] || [];\n\t\t// only add once\n\t\tif ( listeners.indexOf( listener ) == -1 ) {\n\t\t\tlisteners.push( listener );\n\t\t}\n\n\t\treturn this;\n\t};\n\n\tproto.once = function( eventName, listener ) {\n\t\tif ( !eventName || !listener ) {\n\t\t\treturn;\n\t\t}\n\t\t// add event\n\t\tthis.on( eventName, listener );\n\t\t// set once flag\n\t\t// set onceEvents hash\n\t\tvar onceEvents = this._onceEvents = this._onceEvents || {};\n\t\t// set onceListeners object\n\t\tvar onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};\n\t\t// set flag\n\t\tonceListeners[ listener ] = true;\n\n\t\treturn this;\n\t};\n\n\tproto.off = function( eventName, listener ) {\n\t\tvar listeners = this._events && this._events[ eventName ];\n\t\tif ( !listeners || !listeners.length ) {\n\t\t\treturn;\n\t\t}\n\t\tvar index = listeners.indexOf( listener );\n\t\tif ( index != -1 ) {\n\t\t\tlisteners.splice( index, 1 );\n\t\t}\n\n\t\treturn this;\n\t};\n\n\tproto.emitEvent = function( eventName, args ) {\n\t\tvar listeners = this._events && this._events[ eventName ];\n\t\tif ( !listeners || !listeners.length ) {\n\t\t\treturn;\n\t\t}\n\t\t// copy over to avoid interference if .off() in listener\n\t\tlisteners = listeners.slice(0);\n\t\targs = args || [];\n\t\t// once stuff\n\t\tvar onceListeners = this._onceEvents && this._onceEvents[ eventName ];\n\n\t\tfor ( var i=0; i < listeners.length; i++ ) {\n\t\t\tvar listener = listeners[i]\n\t\t\tvar isOnce = onceListeners && onceListeners[ listener ];\n\t\t\tif ( isOnce ) {\n\t\t\t\t// remove listener\n\t\t\t\t// remove before trigger to prevent recursion\n\t\t\t\tthis.off( eventName, listener );\n\t\t\t\t// unset once flag\n\t\t\t\tdelete onceListeners[ listener ];\n\t\t\t}\n\t\t\t// trigger listener\n\t\t\tlistener.apply( this, args );\n\t\t}\n\n\t\treturn this;\n\t};\n\n\tproto.allOff = function() {\n\t\tdelete this._events;\n\t\tdelete this._onceEvents;\n\t};\n\n\treturn EvEmitter;\n\n}));\n\n/*!\n * getSize v2.0.3\n * measure size of elements\n * MIT license\n */\n\n/* jshint browser: true, strict: true, undef: true, unused: true */\n/* globals console: false */\n\n( function( window, factory ) {\n\t/* jshint strict: false */ /* globals define, module */\n\tif ( typeof define == 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( 'get-size/get-size',factory );\n\t} else if ( typeof module == 'object' && module.exports ) {\n\t\t// CommonJS\n\t\tmodule.exports = factory();\n\t} else {\n\t\t// browser global\n\t\twindow.getSize = factory();\n\t}\n\n})( window, function factory() {\n\t'use strict';\n\n// -------------------------- helpers -------------------------- //\n\n// get a number from a string, not a percentage\n\tfunction getStyleSize( value ) {\n\t\tvar num = parseFloat( value );\n\t\t// not a percent like '100%', and a number\n\t\tvar isValid = value.indexOf('%') == -1 && !isNaN( num );\n\t\treturn isValid && num;\n\t}\n\n\tfunction noop() {}\n\n\tvar logError = typeof console == 'undefined' ? noop :\n\t\tfunction( message ) {\n\t\t\tconsole.error( message );\n\t\t};\n\n// -------------------------- measurements -------------------------- //\n\n\tvar measurements = [\n\t\t'paddingLeft',\n\t\t'paddingRight',\n\t\t'paddingTop',\n\t\t'paddingBottom',\n\t\t'marginLeft',\n\t\t'marginRight',\n\t\t'marginTop',\n\t\t'marginBottom',\n\t\t'borderLeftWidth',\n\t\t'borderRightWidth',\n\t\t'borderTopWidth',\n\t\t'borderBottomWidth'\n\t];\n\n\tvar measurementsLength = measurements.length;\n\n\tfunction getZeroSize() {\n\t\tvar size = {\n\t\t\twidth: 0,\n\t\t\theight: 0,\n\t\t\tinnerWidth: 0,\n\t\t\tinnerHeight: 0,\n\t\t\touterWidth: 0,\n\t\t\touterHeight: 0\n\t\t};\n\t\tfor ( var i=0; i < measurementsLength; i++ ) {\n\t\t\tvar measurement = measurements[i];\n\t\t\tsize[ measurement ] = 0;\n\t\t}\n\t\treturn size;\n\t}\n\n// -------------------------- getStyle -------------------------- //\n\n\t/**\n\t * getStyle, get style of element, check for Firefox bug\n\t * https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n\t */\n\tfunction getStyle( elem ) {\n\t\tvar style = getComputedStyle( elem );\n\t\tif ( !style ) {\n\t\t\tlogError( 'Style returned ' + style +\n\t\t\t          '. Are you running this code in a hidden iframe on Firefox? ' +\n\t\t\t          'See https://bit.ly/getsizebug1' );\n\t\t}\n\t\treturn style;\n\t}\n\n// -------------------------- setup -------------------------- //\n\n\tvar isSetup = false;\n\n\tvar isBoxSizeOuter;\n\n\t/**\n\t * setup\n\t * check isBoxSizerOuter\n\t * do on first getSize() rather than on page load for Firefox bug\n\t */\n\tfunction setup() {\n\t\t// setup once\n\t\tif ( isSetup ) {\n\t\t\treturn;\n\t\t}\n\t\tisSetup = true;\n\n\t\t// -------------------------- box sizing -------------------------- //\n\n\t\t/**\n\t\t * Chrome & Safari measure the outer-width on style.width on border-box elems\n\t\t * IE11 & Firefox<29 measures the inner-width\n\t\t */\n\t\tvar div = document.createElement('div');\n\t\tdiv.style.width = '200px';\n\t\tdiv.style.padding = '1px 2px 3px 4px';\n\t\tdiv.style.borderStyle = 'solid';\n\t\tdiv.style.borderWidth = '1px 2px 3px 4px';\n\t\tdiv.style.boxSizing = 'border-box';\n\n\t\tvar body = document.body || document.documentElement;\n\t\tbody.appendChild( div );\n\t\tvar style = getStyle( div );\n\t\t// round value for browser zoom. desandro/masonry#928\n\t\tisBoxSizeOuter = Math.round( getStyleSize( style.width ) ) == 200;\n\t\tgetSize.isBoxSizeOuter = isBoxSizeOuter;\n\n\t\tbody.removeChild( div );\n\t}\n\n// -------------------------- getSize -------------------------- //\n\n\tfunction getSize( elem ) {\n\t\tsetup();\n\n\t\t// use querySeletor if elem is string\n\t\tif ( typeof elem == 'string' ) {\n\t\t\telem = document.querySelector( elem );\n\t\t}\n\n\t\t// do not proceed on non-objects\n\t\tif ( !elem || typeof elem != 'object' || !elem.nodeType ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar style = getStyle( elem );\n\n\t\t// if hidden, everything is 0\n\t\tif ( style.display == 'none' ) {\n\t\t\treturn getZeroSize();\n\t\t}\n\n\t\tvar size = {};\n\t\tsize.width = elem.offsetWidth;\n\t\tsize.height = elem.offsetHeight;\n\n\t\tvar isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';\n\n\t\t// get all measurements\n\t\tfor ( var i=0; i < measurementsLength; i++ ) {\n\t\t\tvar measurement = measurements[i];\n\t\t\tvar value = style[ measurement ];\n\t\t\tvar num = parseFloat( value );\n\t\t\t// any 'auto', 'medium' value will be 0\n\t\t\tsize[ measurement ] = !isNaN( num ) ? num : 0;\n\t\t}\n\n\t\tvar paddingWidth = size.paddingLeft + size.paddingRight;\n\t\tvar paddingHeight = size.paddingTop + size.paddingBottom;\n\t\tvar marginWidth = size.marginLeft + size.marginRight;\n\t\tvar marginHeight = size.marginTop + size.marginBottom;\n\t\tvar borderWidth = size.borderLeftWidth + size.borderRightWidth;\n\t\tvar borderHeight = size.borderTopWidth + size.borderBottomWidth;\n\n\t\tvar isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\n\n\t\t// overwrite width and height if we can get it from style\n\t\tvar styleWidth = getStyleSize( style.width );\n\t\tif ( styleWidth !== false ) {\n\t\t\tsize.width = styleWidth +\n\t\t\t             // add padding and border unless it's already including it\n\t\t\t             ( isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth );\n\t\t}\n\n\t\tvar styleHeight = getStyleSize( style.height );\n\t\tif ( styleHeight !== false ) {\n\t\t\tsize.height = styleHeight +\n\t\t\t              // add padding and border unless it's already including it\n\t\t\t              ( isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight );\n\t\t}\n\n\t\tsize.innerWidth = size.width - ( paddingWidth + borderWidth );\n\t\tsize.innerHeight = size.height - ( paddingHeight + borderHeight );\n\n\t\tsize.outerWidth = size.width + marginWidth;\n\t\tsize.outerHeight = size.height + marginHeight;\n\n\t\treturn size;\n\t}\n\n\treturn getSize;\n\n});\n\n/**\n * matchesSelector v2.0.2\n * matchesSelector( element, '.selector' )\n * MIT license\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true */\n\n( function( window, factory ) {\n\t/*global define: false, module: false */\n\t'use strict';\n\t// universal module definition\n\tif ( typeof define == 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( 'desandro-matches-selector/matches-selector',factory );\n\t} else if ( typeof module == 'object' && module.exports ) {\n\t\t// CommonJS\n\t\tmodule.exports = factory();\n\t} else {\n\t\t// browser global\n\t\twindow.matchesSelector = factory();\n\t}\n\n}( window, function factory() {\n\t'use strict';\n\n\tvar matchesMethod = ( function() {\n\t\tvar ElemProto = window.Element.prototype;\n\t\t// check for the standard method name first\n\t\tif ( ElemProto.matches ) {\n\t\t\treturn 'matches';\n\t\t}\n\t\t// check un-prefixed\n\t\tif ( ElemProto.matchesSelector ) {\n\t\t\treturn 'matchesSelector';\n\t\t}\n\t\t// check vendor prefixes\n\t\tvar prefixes = [ 'webkit', 'moz', 'ms', 'o' ];\n\n\t\tfor ( var i=0; i < prefixes.length; i++ ) {\n\t\t\tvar prefix = prefixes[i];\n\t\t\tvar method = prefix + 'MatchesSelector';\n\t\t\tif ( ElemProto[ method ] ) {\n\t\t\t\treturn method;\n\t\t\t}\n\t\t}\n\t})();\n\n\treturn function matchesSelector( elem, selector ) {\n\t\treturn elem[ matchesMethod ]( selector );\n\t};\n\n}));\n\n/**\n * Fizzy UI utils v2.0.7\n * MIT license\n */\n\n/*jshint browser: true, undef: true, unused: true, strict: true */\n\n( function( window, factory ) {\n\t// universal module definition\n\t/*jshint strict: false */ /*globals define, module, require */\n\n\tif ( typeof define == 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( 'fizzy-ui-utils/utils',[\n\t\t\t'desandro-matches-selector/matches-selector'\n\t\t], function( matchesSelector ) {\n\t\t\treturn factory( window, matchesSelector );\n\t\t});\n\t} else if ( typeof module == 'object' && module.exports ) {\n\t\t// CommonJS\n\t\tmodule.exports = factory(\n\t\t\twindow,\n\t\t\trequire('desandro-matches-selector')\n\t\t);\n\t} else {\n\t\t// browser global\n\t\twindow.fizzyUIUtils = factory(\n\t\t\twindow,\n\t\t\twindow.matchesSelector\n\t\t);\n\t}\n\n}( window, function factory( window, matchesSelector ) {\n\n\n\n\tvar utils = {};\n\n// ----- extend ----- //\n\n// extends objects\n\tutils.extend = function( a, b ) {\n\t\tfor ( var prop in b ) {\n\t\t\ta[ prop ] = b[ prop ];\n\t\t}\n\t\treturn a;\n\t};\n\n// ----- modulo ----- //\n\n\tutils.modulo = function( num, div ) {\n\t\treturn ( ( num % div ) + div ) % div;\n\t};\n\n// ----- makeArray ----- //\n\n\tvar arraySlice = Array.prototype.slice;\n\n// turn element or nodeList into an array\n\tutils.makeArray = function( obj ) {\n\t\tif ( Array.isArray( obj ) ) {\n\t\t\t// use object if already an array\n\t\t\treturn obj;\n\t\t}\n\t\t// return empty array if undefined or null. #6\n\t\tif ( obj === null || obj === undefined ) {\n\t\t\treturn [];\n\t\t}\n\n\t\tvar isArrayLike = typeof obj == 'object' && typeof obj.length == 'number';\n\t\tif ( isArrayLike ) {\n\t\t\t// convert nodeList to array\n\t\t\treturn arraySlice.call( obj );\n\t\t}\n\n\t\t// array of single index\n\t\treturn [ obj ];\n\t};\n\n// ----- removeFrom ----- //\n\n\tutils.removeFrom = function( ary, obj ) {\n\t\tvar index = ary.indexOf( obj );\n\t\tif ( index != -1 ) {\n\t\t\tary.splice( index, 1 );\n\t\t}\n\t};\n\n// ----- getParent ----- //\n\n\tutils.getParent = function( elem, selector ) {\n\t\twhile ( elem.parentNode && elem != document.body ) {\n\t\t\telem = elem.parentNode;\n\t\t\tif ( matchesSelector( elem, selector ) ) {\n\t\t\t\treturn elem;\n\t\t\t}\n\t\t}\n\t};\n\n// ----- getQueryElement ----- //\n\n// use element as selector string\n\tutils.getQueryElement = function( elem ) {\n\t\tif ( typeof elem == 'string' ) {\n\t\t\treturn document.querySelector( elem );\n\t\t}\n\t\treturn elem;\n\t};\n\n// ----- handleEvent ----- //\n\n// enable .ontype to trigger from .addEventListener( elem, 'type' )\n\tutils.handleEvent = function( event ) {\n\t\tvar method = 'on' + event.type;\n\t\tif ( this[ method ] ) {\n\t\t\tthis[ method ]( event );\n\t\t}\n\t};\n\n// ----- filterFindElements ----- //\n\n\tutils.filterFindElements = function( elems, selector ) {\n\t\t// make array of elems\n\t\telems = utils.makeArray( elems );\n\t\tvar ffElems = [];\n\n\t\t// Edumall Edited: Fix Elementor.\n\t\tvar isElement = function (elem) {\n\t\t\treturn (\n\t\t\t\ttypeof HTMLElement === \"object\" ? elem instanceof HTMLElement : elem && typeof elem === \"object\" && elem !== null && elem.nodeType === 1 && typeof elem.nodeName === \"string\"\n\t\t\t);\n\t\t};\n\n\t\telems.forEach( function( elem ) {\n\t\t\t// Edumall Edited:\n\t\t\t// check that elem is an actual element\n\t\t\t/*if ( !( elem instanceof HTMLElement ) ) {\n\t\t\t\treturn;\n\t\t\t}*/\n\t\t\tif ( !isElement( elem ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// add elem if no selector\n\t\t\tif ( !selector ) {\n\t\t\t\tffElems.push( elem );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// filter & find items if we have a selector\n\t\t\t// filter\n\t\t\tif ( matchesSelector( elem, selector ) ) {\n\t\t\t\tffElems.push( elem );\n\t\t\t}\n\t\t\t// find children\n\t\t\tvar childElems = elem.querySelectorAll( selector );\n\t\t\t// concat childElems to filterFound array\n\t\t\tfor ( var i=0; i < childElems.length; i++ ) {\n\t\t\t\tffElems.push( childElems[i] );\n\t\t\t}\n\t\t});\n\n\t\treturn ffElems;\n\t};\n\n// ----- debounceMethod ----- //\n\n\tutils.debounceMethod = function( _class, methodName, threshold ) {\n\t\tthreshold = threshold || 100;\n\t\t// original method\n\t\tvar method = _class.prototype[ methodName ];\n\t\tvar timeoutName = methodName + 'Timeout';\n\n\t\t_class.prototype[ methodName ] = function() {\n\t\t\tvar timeout = this[ timeoutName ];\n\t\t\tclearTimeout( timeout );\n\n\t\t\tvar args = arguments;\n\t\t\tvar _this = this;\n\t\t\tthis[ timeoutName ] = setTimeout( function() {\n\t\t\t\tmethod.apply( _this, args );\n\t\t\t\tdelete _this[ timeoutName ];\n\t\t\t}, threshold );\n\t\t};\n\t};\n\n// ----- docReady ----- //\n\n\tutils.docReady = function( callback ) {\n\t\tvar readyState = document.readyState;\n\t\tif ( readyState == 'complete' || readyState == 'interactive' ) {\n\t\t\t// do async to allow for other scripts to run. metafizzy/flickity#441\n\t\t\tsetTimeout( callback );\n\t\t} else {\n\t\t\tdocument.addEventListener( 'DOMContentLoaded', callback );\n\t\t}\n\t};\n\n// ----- htmlInit ----- //\n\n// http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/\n\tutils.toDashed = function( str ) {\n\t\treturn str.replace( /(.)([A-Z])/g, function( match, $1, $2 ) {\n\t\t\treturn $1 + '-' + $2;\n\t\t}).toLowerCase();\n\t};\n\n\tvar console = window.console;\n\t/**\n\t * allow user to initialize classes via [data-namespace] or .js-namespace class\n\t * htmlInit( Widget, 'widgetName' )\n\t * options are parsed from data-namespace-options\n\t */\n\tutils.htmlInit = function( WidgetClass, namespace ) {\n\t\tutils.docReady( function() {\n\t\t\tvar dashedNamespace = utils.toDashed( namespace );\n\t\t\tvar dataAttr = 'data-' + dashedNamespace;\n\t\t\tvar dataAttrElems = document.querySelectorAll( '[' + dataAttr + ']' );\n\t\t\tvar jsDashElems = document.querySelectorAll( '.js-' + dashedNamespace );\n\t\t\tvar elems = utils.makeArray( dataAttrElems )\n\t\t\t                 .concat( utils.makeArray( jsDashElems ) );\n\t\t\tvar dataOptionsAttr = dataAttr + '-options';\n\t\t\tvar jQuery = window.jQuery;\n\n\t\t\telems.forEach( function( elem ) {\n\t\t\t\tvar attr = elem.getAttribute( dataAttr ) ||\n\t\t\t\t           elem.getAttribute( dataOptionsAttr );\n\t\t\t\tvar options;\n\t\t\t\ttry {\n\t\t\t\t\toptions = attr && JSON.parse( attr );\n\t\t\t\t} catch ( error ) {\n\t\t\t\t\t// log error, do not initialize\n\t\t\t\t\tif ( console ) {\n\t\t\t\t\t\tconsole.error( 'Error parsing ' + dataAttr + ' on ' + elem.className +\n\t\t\t\t\t\t               ': ' + error );\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// initialize\n\t\t\t\tvar instance = new WidgetClass( elem, options );\n\t\t\t\t// make available via $().data('namespace')\n\t\t\t\tif ( jQuery ) {\n\t\t\t\t\tjQuery.data( elem, namespace, instance );\n\t\t\t\t}\n\t\t\t});\n\n\t\t});\n\t};\n\n// -----  ----- //\n\n\treturn utils;\n\n}));\n\n/**\n * Outlayer Item\n */\n\n( function( window, factory ) {\n\t// universal module definition\n\t/* jshint strict: false */ /* globals define, module, require */\n\tif ( typeof define == 'function' && define.amd ) {\n\t\t// AMD - RequireJS\n\t\tdefine( 'outlayer/item',[\n\t\t\t\t'ev-emitter/ev-emitter',\n\t\t\t\t'get-size/get-size'\n\t\t\t],\n\t\t\tfactory\n\t\t);\n\t} else if ( typeof module == 'object' && module.exports ) {\n\t\t// CommonJS - Browserify, Webpack\n\t\tmodule.exports = factory(\n\t\t\trequire('ev-emitter'),\n\t\t\trequire('get-size')\n\t\t);\n\t} else {\n\t\t// browser global\n\t\twindow.Outlayer = {};\n\t\twindow.Outlayer.Item = factory(\n\t\t\twindow.EvEmitter,\n\t\t\twindow.getSize\n\t\t);\n\t}\n\n}( window, function factory( EvEmitter, getSize ) {\n\t'use strict';\n\n// ----- helpers ----- //\n\n\tfunction isEmptyObj( obj ) {\n\t\tfor ( var prop in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\tprop = null;\n\t\treturn true;\n\t}\n\n// -------------------------- CSS3 support -------------------------- //\n\n\n\tvar docElemStyle = document.documentElement.style;\n\n\tvar transitionProperty = typeof docElemStyle.transition == 'string' ?\n\t\t'transition' : 'WebkitTransition';\n\tvar transformProperty = typeof docElemStyle.transform == 'string' ?\n\t\t'transform' : 'WebkitTransform';\n\n\tvar transitionEndEvent = {\n\t\tWebkitTransition: 'webkitTransitionEnd',\n\t\ttransition: 'transitionend'\n\t}[ transitionProperty ];\n\n// cache all vendor properties that could have vendor prefix\n\tvar vendorProperties = {\n\t\ttransform: transformProperty,\n\t\ttransition: transitionProperty,\n\t\ttransitionDuration: transitionProperty + 'Duration',\n\t\ttransitionProperty: transitionProperty + 'Property',\n\t\ttransitionDelay: transitionProperty + 'Delay'\n\t};\n\n// -------------------------- Item -------------------------- //\n\n\tfunction Item( element, layout ) {\n\t\tif ( !element ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.element = element;\n\t\t// parent layout class, i.e. Masonry, Isotope, or Packery\n\t\tthis.layout = layout;\n\t\tthis.position = {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t};\n\n\t\tthis._create();\n\t}\n\n// inherit EvEmitter\n\tvar proto = Item.prototype = Object.create( EvEmitter.prototype );\n\tproto.constructor = Item;\n\n\tproto._create = function() {\n\t\t// transition objects\n\t\tthis._transn = {\n\t\t\tingProperties: {},\n\t\t\tclean: {},\n\t\t\tonEnd: {}\n\t\t};\n\n\t\tthis.css({\n\t\t\tposition: 'absolute'\n\t\t});\n\t};\n\n// trigger specified handler for event type\n\tproto.handleEvent = function( event ) {\n\t\tvar method = 'on' + event.type;\n\t\tif ( this[ method ] ) {\n\t\t\tthis[ method ]( event );\n\t\t}\n\t};\n\n\tproto.getSize = function() {\n\t\tthis.size = getSize( this.element );\n\t};\n\n\t/**\n\t * apply CSS styles to element\n\t * @param {Object} style\n\t */\n\tproto.css = function( style ) {\n\t\tvar elemStyle = this.element.style;\n\n\t\tfor ( var prop in style ) {\n\t\t\t// use vendor property if available\n\t\t\tvar supportedProp = vendorProperties[ prop ] || prop;\n\t\t\telemStyle[ supportedProp ] = style[ prop ];\n\t\t}\n\t};\n\n\t// measure position, and sets it\n\tproto.getPosition = function() {\n\t\tvar style = getComputedStyle( this.element );\n\t\tvar isOriginLeft = this.layout._getOption('originLeft');\n\t\tvar isOriginTop = this.layout._getOption('originTop');\n\t\tvar xValue = style[ isOriginLeft ? 'left' : 'right' ];\n\t\tvar yValue = style[ isOriginTop ? 'top' : 'bottom' ];\n\t\tvar x = parseFloat( xValue );\n\t\tvar y = parseFloat( yValue );\n\t\t// convert percent to pixels\n\t\tvar layoutSize = this.layout.size;\n\t\tif ( xValue.indexOf('%') != -1 ) {\n\t\t\tx = ( x / 100 ) * layoutSize.width;\n\t\t}\n\t\tif ( yValue.indexOf('%') != -1 ) {\n\t\t\ty = ( y / 100 ) * layoutSize.height;\n\t\t}\n\t\t// clean up 'auto' or other non-integer values\n\t\tx = isNaN( x ) ? 0 : x;\n\t\ty = isNaN( y ) ? 0 : y;\n\t\t// remove padding from measurement\n\t\tx -= isOriginLeft ? layoutSize.paddingLeft : layoutSize.paddingRight;\n\t\ty -= isOriginTop ? layoutSize.paddingTop : layoutSize.paddingBottom;\n\n\t\tthis.position.x = x;\n\t\tthis.position.y = y;\n\t};\n\n// set settled position, apply padding\n\tproto.layoutPosition = function() {\n\t\tvar layoutSize = this.layout.size;\n\t\tvar style = {};\n\t\tvar isOriginLeft = this.layout._getOption('originLeft');\n\t\tvar isOriginTop = this.layout._getOption('originTop');\n\n\t\t// x\n\t\tvar xPadding = isOriginLeft ? 'paddingLeft' : 'paddingRight';\n\t\tvar xProperty = isOriginLeft ? 'left' : 'right';\n\t\tvar xResetProperty = isOriginLeft ? 'right' : 'left';\n\n\t\tvar x = this.position.x + layoutSize[ xPadding ];\n\t\t// set in percentage or pixels\n\t\tstyle[ xProperty ] = this.getXValue( x );\n\t\t// reset other property\n\t\tstyle[ xResetProperty ] = '';\n\n\t\t// y\n\t\tvar yPadding = isOriginTop ? 'paddingTop' : 'paddingBottom';\n\t\tvar yProperty = isOriginTop ? 'top' : 'bottom';\n\t\tvar yResetProperty = isOriginTop ? 'bottom' : 'top';\n\n\t\tvar y = this.position.y + layoutSize[ yPadding ];\n\t\t// set in percentage or pixels\n\t\tstyle[ yProperty ] = this.getYValue( y );\n\t\t// reset other property\n\t\tstyle[ yResetProperty ] = '';\n\n\t\tthis.css( style );\n\t\tthis.emitEvent( 'layout', [ this ] );\n\t};\n\n\tproto.getXValue = function( x ) {\n\t\tvar isHorizontal = this.layout._getOption('horizontal');\n\t\treturn this.layout.options.percentPosition && !isHorizontal ?\n\t\t\t( ( x / this.layout.size.width ) * 100 ) + '%' : x + 'px';\n\t};\n\n\tproto.getYValue = function( y ) {\n\t\tvar isHorizontal = this.layout._getOption('horizontal');\n\t\treturn this.layout.options.percentPosition && isHorizontal ?\n\t\t\t( ( y / this.layout.size.height ) * 100 ) + '%' : y + 'px';\n\t};\n\n\tproto._transitionTo = function( x, y ) {\n\t\tthis.getPosition();\n\t\t// get current x & y from top/left\n\t\tvar curX = this.position.x;\n\t\tvar curY = this.position.y;\n\n\t\tvar didNotMove = x == this.position.x && y == this.position.y;\n\n\t\t// save end position\n\t\tthis.setPosition( x, y );\n\n\t\t// if did not move and not transitioning, just go to layout\n\t\tif ( didNotMove && !this.isTransitioning ) {\n\t\t\tthis.layoutPosition();\n\t\t\treturn;\n\t\t}\n\n\t\tvar transX = x - curX;\n\t\tvar transY = y - curY;\n\t\tvar transitionStyle = {};\n\t\ttransitionStyle.transform = this.getTranslate( transX, transY );\n\n\t\tthis.transition({\n\t\t\tto: transitionStyle,\n\t\t\tonTransitionEnd: {\n\t\t\t\ttransform: this.layoutPosition\n\t\t\t},\n\t\t\tisCleaning: true\n\t\t});\n\t};\n\n\tproto.getTranslate = function( x, y ) {\n\t\t// flip cooridinates if origin on right or bottom\n\t\tvar isOriginLeft = this.layout._getOption('originLeft');\n\t\tvar isOriginTop = this.layout._getOption('originTop');\n\t\tx = isOriginLeft ? x : -x;\n\t\ty = isOriginTop ? y : -y;\n\t\treturn 'translate3d(' + x + 'px, ' + y + 'px, 0)';\n\t};\n\n// non transition + transform support\n\tproto.goTo = function( x, y ) {\n\t\tthis.setPosition( x, y );\n\t\tthis.layoutPosition();\n\t};\n\n\tproto.moveTo = proto._transitionTo;\n\n\tproto.setPosition = function( x, y ) {\n\t\tthis.position.x = parseFloat( x );\n\t\tthis.position.y = parseFloat( y );\n\t};\n\n// ----- transition ----- //\n\n\t/**\n\t * @param {Object} style - CSS\n\t * @param {Function} onTransitionEnd\n\t */\n\n// non transition, just trigger callback\n\tproto._nonTransition = function( args ) {\n\t\tthis.css( args.to );\n\t\tif ( args.isCleaning ) {\n\t\t\tthis._removeStyles( args.to );\n\t\t}\n\t\tfor ( var prop in args.onTransitionEnd ) {\n\t\t\targs.onTransitionEnd[ prop ].call( this );\n\t\t}\n\t};\n\n\t/**\n\t * proper transition\n\t * @param {Object} args - arguments\n\t *   @param {Object} to - style to transition to\n\t *   @param {Object} from - style to start transition from\n\t *   @param {Boolean} isCleaning - removes transition styles after transition\n\t *   @param {Function} onTransitionEnd - callback\n\t */\n\tproto.transition = function( args ) {\n\t\t// redirect to nonTransition if no transition duration\n\t\tif ( !parseFloat( this.layout.options.transitionDuration ) ) {\n\t\t\tthis._nonTransition( args );\n\t\t\treturn;\n\t\t}\n\n\t\tvar _transition = this._transn;\n\t\t// keep track of onTransitionEnd callback by css property\n\t\tfor ( var prop in args.onTransitionEnd ) {\n\t\t\t_transition.onEnd[ prop ] = args.onTransitionEnd[ prop ];\n\t\t}\n\t\t// keep track of properties that are transitioning\n\t\tfor ( prop in args.to ) {\n\t\t\t_transition.ingProperties[ prop ] = true;\n\t\t\t// keep track of properties to clean up when transition is done\n\t\t\tif ( args.isCleaning ) {\n\t\t\t\t_transition.clean[ prop ] = true;\n\t\t\t}\n\t\t}\n\n\t\t// set from styles\n\t\tif ( args.from ) {\n\t\t\tthis.css( args.from );\n\t\t\t// force redraw. http://blog.alexmaccaw.com/css-transitions\n\t\t\tvar h = this.element.offsetHeight;\n\t\t\t// hack for JSHint to hush about unused var\n\t\t\th = null;\n\t\t}\n\t\t// enable transition\n\t\tthis.enableTransition( args.to );\n\t\t// set styles that are transitioning\n\t\tthis.css( args.to );\n\n\t\tthis.isTransitioning = true;\n\n\t};\n\n// dash before all cap letters, including first for\n// WebkitTransform => -webkit-transform\n\tfunction toDashedAll( str ) {\n\t\treturn str.replace( /([A-Z])/g, function( $1 ) {\n\t\t\treturn '-' + $1.toLowerCase();\n\t\t});\n\t}\n\n\tvar transitionProps = 'opacity,' + toDashedAll( transformProperty );\n\n\tproto.enableTransition = function(/* style */) {\n\t\t// HACK changing transitionProperty during a transition\n\t\t// will cause transition to jump\n\t\tif ( this.isTransitioning ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// make `transition: foo, bar, baz` from style object\n\t\t// HACK un-comment this when enableTransition can work\n\t\t// while a transition is happening\n\t\t// var transitionValues = [];\n\t\t// for ( var prop in style ) {\n\t\t//   // dash-ify camelCased properties like WebkitTransition\n\t\t//   prop = vendorProperties[ prop ] || prop;\n\t\t//   transitionValues.push( toDashedAll( prop ) );\n\t\t// }\n\t\t// munge number to millisecond, to match stagger\n\t\tvar duration = this.layout.options.transitionDuration;\n\t\tduration = typeof duration == 'number' ? duration + 'ms' : duration;\n\t\t// enable transition styles\n\t\tthis.css({\n\t\t\ttransitionProperty: transitionProps,\n\t\t\ttransitionDuration: duration,\n\t\t\ttransitionDelay: this.staggerDelay || 0\n\t\t});\n\t\t// listen for transition end event\n\t\tthis.element.addEventListener( transitionEndEvent, this, false );\n\t};\n\n// ----- events ----- //\n\n\tproto.onwebkitTransitionEnd = function( event ) {\n\t\tthis.ontransitionend( event );\n\t};\n\n\tproto.onotransitionend = function( event ) {\n\t\tthis.ontransitionend( event );\n\t};\n\n// properties that I munge to make my life easier\n\tvar dashedVendorProperties = {\n\t\t'-webkit-transform': 'transform'\n\t};\n\n\tproto.ontransitionend = function( event ) {\n\t\t// disregard bubbled events from children\n\t\tif ( event.target !== this.element ) {\n\t\t\treturn;\n\t\t}\n\t\tvar _transition = this._transn;\n\t\t// get property name of transitioned property, convert to prefix-free\n\t\tvar propertyName = dashedVendorProperties[ event.propertyName ] || event.propertyName;\n\n\t\t// remove property that has completed transitioning\n\t\tdelete _transition.ingProperties[ propertyName ];\n\t\t// check if any properties are still transitioning\n\t\tif ( isEmptyObj( _transition.ingProperties ) ) {\n\t\t\t// all properties have completed transitioning\n\t\t\tthis.disableTransition();\n\t\t}\n\t\t// clean style\n\t\tif ( propertyName in _transition.clean ) {\n\t\t\t// clean up style\n\t\t\tthis.element.style[ event.propertyName ] = '';\n\t\t\tdelete _transition.clean[ propertyName ];\n\t\t}\n\t\t// trigger onTransitionEnd callback\n\t\tif ( propertyName in _transition.onEnd ) {\n\t\t\tvar onTransitionEnd = _transition.onEnd[ propertyName ];\n\t\t\tonTransitionEnd.call( this );\n\t\t\tdelete _transition.onEnd[ propertyName ];\n\t\t}\n\n\t\tthis.emitEvent( 'transitionEnd', [ this ] );\n\t};\n\n\tproto.disableTransition = function() {\n\t\tthis.removeTransitionStyles();\n\t\tthis.element.removeEventListener( transitionEndEvent, this, false );\n\t\tthis.isTransitioning = false;\n\t};\n\n\t/**\n\t * removes style property from element\n\t * @param {Object} style\n\t **/\n\tproto._removeStyles = function( style ) {\n\t\t// clean up transition styles\n\t\tvar cleanStyle = {};\n\t\tfor ( var prop in style ) {\n\t\t\tcleanStyle[ prop ] = '';\n\t\t}\n\t\tthis.css( cleanStyle );\n\t};\n\n\tvar cleanTransitionStyle = {\n\t\ttransitionProperty: '',\n\t\ttransitionDuration: '',\n\t\ttransitionDelay: ''\n\t};\n\n\tproto.removeTransitionStyles = function() {\n\t\t// remove transition\n\t\tthis.css( cleanTransitionStyle );\n\t};\n\n// ----- stagger ----- //\n\n\tproto.stagger = function( delay ) {\n\t\tdelay = isNaN( delay ) ? 0 : delay;\n\t\tthis.staggerDelay = delay + 'ms';\n\t};\n\n// ----- show/hide/remove ----- //\n\n// remove element from DOM\n\tproto.removeElem = function() {\n\t\tthis.element.parentNode.removeChild( this.element );\n\t\t// remove display: none\n\t\tthis.css({ display: '' });\n\t\tthis.emitEvent( 'remove', [ this ] );\n\t};\n\n\tproto.remove = function() {\n\t\t// just remove element if no transition support or no transition\n\t\tif ( !transitionProperty || !parseFloat( this.layout.options.transitionDuration ) ) {\n\t\t\tthis.removeElem();\n\t\t\treturn;\n\t\t}\n\n\t\t// start transition\n\t\tthis.once( 'transitionEnd', function() {\n\t\t\tthis.removeElem();\n\t\t});\n\t\tthis.hide();\n\t};\n\n\tproto.reveal = function() {\n\t\tdelete this.isHidden;\n\t\t// remove display: none\n\t\tthis.css({ display: '' });\n\n\t\tvar options = this.layout.options;\n\n\t\tvar onTransitionEnd = {};\n\t\tvar transitionEndProperty = this.getHideRevealTransitionEndProperty('visibleStyle');\n\t\tonTransitionEnd[ transitionEndProperty ] = this.onRevealTransitionEnd;\n\n\t\tthis.transition({\n\t\t\tfrom: options.hiddenStyle,\n\t\t\tto: options.visibleStyle,\n\t\t\tisCleaning: true,\n\t\t\tonTransitionEnd: onTransitionEnd\n\t\t});\n\t};\n\n\tproto.onRevealTransitionEnd = function() {\n\t\t// check if still visible\n\t\t// during transition, item may have been hidden\n\t\tif ( !this.isHidden ) {\n\t\t\tthis.emitEvent('reveal');\n\t\t}\n\t};\n\n\t/**\n\t * get style property use for hide/reveal transition end\n\t * @param {String} styleProperty - hiddenStyle/visibleStyle\n\t * @returns {String}\n\t */\n\tproto.getHideRevealTransitionEndProperty = function( styleProperty ) {\n\t\tvar optionStyle = this.layout.options[ styleProperty ];\n\t\t// use opacity\n\t\tif ( optionStyle.opacity ) {\n\t\t\treturn 'opacity';\n\t\t}\n\t\t// get first property\n\t\tfor ( var prop in optionStyle ) {\n\t\t\treturn prop;\n\t\t}\n\t};\n\n\tproto.hide = function() {\n\t\t// set flag\n\t\tthis.isHidden = true;\n\t\t// remove display: none\n\t\tthis.css({ display: '' });\n\n\t\tvar options = this.layout.options;\n\n\t\tvar onTransitionEnd = {};\n\t\tvar transitionEndProperty = this.getHideRevealTransitionEndProperty('hiddenStyle');\n\t\tonTransitionEnd[ transitionEndProperty ] = this.onHideTransitionEnd;\n\n\t\tthis.transition({\n\t\t\tfrom: options.visibleStyle,\n\t\t\tto: options.hiddenStyle,\n\t\t\t// keep hidden stuff hidden\n\t\t\tisCleaning: true,\n\t\t\tonTransitionEnd: onTransitionEnd\n\t\t});\n\t};\n\n\tproto.onHideTransitionEnd = function() {\n\t\t// check if still hidden\n\t\t// during transition, item may have been un-hidden\n\t\tif ( this.isHidden ) {\n\t\t\tthis.css({ display: 'none' });\n\t\t\tthis.emitEvent('hide');\n\t\t}\n\t};\n\n\tproto.destroy = function() {\n\t\tthis.css({\n\t\t\tposition: '',\n\t\t\tleft: '',\n\t\t\tright: '',\n\t\t\ttop: '',\n\t\t\tbottom: '',\n\t\t\ttransition: '',\n\t\t\ttransform: ''\n\t\t});\n\t};\n\n\treturn Item;\n\n}));\n\n/*!\n * Outlayer v2.1.1\n * the brains and guts of a layout library\n * MIT license\n */\n\n( function( window, factory ) {\n\t'use strict';\n\t// universal module definition\n\t/* jshint strict: false */ /* globals define, module, require */\n\tif ( typeof define == 'function' && define.amd ) {\n\t\t// AMD - RequireJS\n\t\tdefine( 'outlayer/outlayer',[\n\t\t\t\t'ev-emitter/ev-emitter',\n\t\t\t\t'get-size/get-size',\n\t\t\t\t'fizzy-ui-utils/utils',\n\t\t\t\t'./item'\n\t\t\t],\n\t\t\tfunction( EvEmitter, getSize, utils, Item ) {\n\t\t\t\treturn factory( window, EvEmitter, getSize, utils, Item);\n\t\t\t}\n\t\t);\n\t} else if ( typeof module == 'object' && module.exports ) {\n\t\t// CommonJS - Browserify, Webpack\n\t\tmodule.exports = factory(\n\t\t\twindow,\n\t\t\trequire('ev-emitter'),\n\t\t\trequire('get-size'),\n\t\t\trequire('fizzy-ui-utils'),\n\t\t\trequire('./item')\n\t\t);\n\t} else {\n\t\t// browser global\n\t\twindow.Outlayer = factory(\n\t\t\twindow,\n\t\t\twindow.EvEmitter,\n\t\t\twindow.getSize,\n\t\t\twindow.fizzyUIUtils,\n\t\t\twindow.Outlayer.Item\n\t\t);\n\t}\n\n}( window, function factory( window, EvEmitter, getSize, utils, Item ) {\n\t'use strict';\n\n// ----- vars ----- //\n\n\tvar console = window.console;\n\tvar jQuery = window.jQuery;\n\tvar noop = function() {};\n\n// -------------------------- Outlayer -------------------------- //\n\n// globally unique identifiers\n\tvar GUID = 0;\n// internal store of all Outlayer intances\n\tvar instances = {};\n\n\n\t/**\n\t * @param {Element, String} element\n\t * @param {Object} options\n\t * @constructor\n\t */\n\tfunction Outlayer( element, options ) {\n\t\tvar queryElement = utils.getQueryElement( element );\n\t\tif ( !queryElement ) {\n\t\t\tif ( console ) {\n\t\t\t\tconsole.error( 'Bad element for ' + this.constructor.namespace +\n\t\t\t\t               ': ' + ( queryElement || element ) );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tthis.element = queryElement;\n\t\t// add jQuery\n\t\tif ( jQuery ) {\n\t\t\tthis.$element = jQuery( this.element );\n\t\t}\n\n\t\t// options\n\t\tthis.options = utils.extend( {}, this.constructor.defaults );\n\t\tthis.option( options );\n\n\t\t// add id for Outlayer.getFromElement\n\t\tvar id = ++GUID;\n\t\tthis.element.outlayerGUID = id; // expando\n\t\tinstances[ id ] = this; // associate via id\n\n\t\t// kick it off\n\t\tthis._create();\n\n\t\tvar isInitLayout = this._getOption('initLayout');\n\t\tif ( isInitLayout ) {\n\t\t\tthis.layout();\n\t\t}\n\t}\n\n// settings are for internal use only\n\tOutlayer.namespace = 'outlayer';\n\tOutlayer.Item = Item;\n\n// default options\n\tOutlayer.defaults = {\n\t\tcontainerStyle: {\n\t\t\tposition: 'relative'\n\t\t},\n\t\tinitLayout: true,\n\t\toriginLeft: true,\n\t\toriginTop: true,\n\t\tresize: true,\n\t\tresizeContainer: true,\n\t\t// item options\n\t\ttransitionDuration: '0.4s',\n\t\thiddenStyle: {\n\t\t\topacity: 0,\n\t\t\ttransform: 'scale(0.001)'\n\t\t},\n\t\tvisibleStyle: {\n\t\t\topacity: 1,\n\t\t\ttransform: 'scale(1)'\n\t\t}\n\t};\n\n\tvar proto = Outlayer.prototype;\n// inherit EvEmitter\n\tutils.extend( proto, EvEmitter.prototype );\n\n\t/**\n\t * set options\n\t * @param {Object} opts\n\t */\n\tproto.option = function( opts ) {\n\t\tutils.extend( this.options, opts );\n\t};\n\n\t/**\n\t * get backwards compatible option value, check old name\n\t */\n\tproto._getOption = function( option ) {\n\t\tvar oldOption = this.constructor.compatOptions[ option ];\n\t\treturn oldOption && this.options[ oldOption ] !== undefined ?\n\t\t\tthis.options[ oldOption ] : this.options[ option ];\n\t};\n\n\tOutlayer.compatOptions = {\n\t\t// currentName: oldName\n\t\tinitLayout: 'isInitLayout',\n\t\thorizontal: 'isHorizontal',\n\t\tlayoutInstant: 'isLayoutInstant',\n\t\toriginLeft: 'isOriginLeft',\n\t\toriginTop: 'isOriginTop',\n\t\tresize: 'isResizeBound',\n\t\tresizeContainer: 'isResizingContainer'\n\t};\n\n\tproto._create = function() {\n\t\t// get items from children\n\t\tthis.reloadItems();\n\t\t// elements that affect layout, but are not laid out\n\t\tthis.stamps = [];\n\t\tthis.stamp( this.options.stamp );\n\t\t// set container style\n\t\tutils.extend( this.element.style, this.options.containerStyle );\n\n\t\t// bind resize method\n\t\tvar canBindResize = this._getOption('resize');\n\t\tif ( canBindResize ) {\n\t\t\tthis.bindResize();\n\t\t}\n\t};\n\n// goes through all children again and gets bricks in proper order\n\tproto.reloadItems = function() {\n\t\t// collection of item elements\n\t\tthis.items = this._itemize( this.element.children );\n\t};\n\n\n\t/**\n\t * turn elements into Outlayer.Items to be used in layout\n\t * @param {Array or NodeList or HTMLElement} elems\n\t * @returns {Array} items - collection of new Outlayer Items\n\t */\n\tproto._itemize = function( elems ) {\n\n\t\tvar itemElems = this._filterFindItemElements( elems );\n\t\tvar Item = this.constructor.Item;\n\n\t\t// create new Outlayer Items for collection\n\t\tvar items = [];\n\t\tfor ( var i=0; i < itemElems.length; i++ ) {\n\t\t\tvar elem = itemElems[i];\n\t\t\tvar item = new Item( elem, this );\n\t\t\titems.push( item );\n\t\t}\n\n\t\treturn items;\n\t};\n\n\t/**\n\t * get item elements to be used in layout\n\t * @param {Array or NodeList or HTMLElement} elems\n\t * @returns {Array} items - item elements\n\t */\n\tproto._filterFindItemElements = function( elems ) {\n\t\treturn utils.filterFindElements( elems, this.options.itemSelector );\n\t};\n\n\t/**\n\t * getter method for getting item elements\n\t * @returns {Array} elems - collection of item elements\n\t */\n\tproto.getItemElements = function() {\n\t\treturn this.items.map( function( item ) {\n\t\t\treturn item.element;\n\t\t});\n\t};\n\n// ----- init & layout ----- //\n\n\t/**\n\t * lays out all items\n\t */\n\tproto.layout = function() {\n\t\tthis._resetLayout();\n\t\tthis._manageStamps();\n\n\t\t// don't animate first layout\n\t\tvar layoutInstant = this._getOption('layoutInstant');\n\t\tvar isInstant = layoutInstant !== undefined ?\n\t\t\tlayoutInstant : !this._isLayoutInited;\n\t\tthis.layoutItems( this.items, isInstant );\n\n\t\t// flag for initalized\n\t\tthis._isLayoutInited = true;\n\t};\n\n// _init is alias for layout\n\tproto._init = proto.layout;\n\n\t/**\n\t * logic before any new layout\n\t */\n\tproto._resetLayout = function() {\n\t\tthis.getSize();\n\t};\n\n\n\tproto.getSize = function() {\n\t\tthis.size = getSize( this.element );\n\t};\n\n\t/**\n\t * get measurement from option, for columnWidth, rowHeight, gutter\n\t * if option is String -> get element from selector string, & get size of element\n\t * if option is Element -> get size of element\n\t * else use option as a number\n\t *\n\t * @param {String} measurement\n\t * @param {String} size - width or height\n\t * @private\n\t */\n\tproto._getMeasurement = function( measurement, size ) {\n\t\tvar option = this.options[ measurement ];\n\t\tvar elem;\n\t\tif ( !option ) {\n\t\t\t// default to 0\n\t\t\tthis[ measurement ] = 0;\n\t\t} else {\n\t\t\t// use option as an element\n\t\t\tif ( typeof option == 'string' ) {\n\t\t\t\telem = this.element.querySelector( option );\n\t\t\t} else if ( option instanceof HTMLElement ) {\n\t\t\t\telem = option;\n\t\t\t}\n\t\t\t// use size of element, if element\n\t\t\tthis[ measurement ] = elem ? getSize( elem )[ size ] : option;\n\t\t}\n\t};\n\n\t/**\n\t * layout a collection of item elements\n\t * @api public\n\t */\n\tproto.layoutItems = function( items, isInstant ) {\n\t\titems = this._getItemsForLayout( items );\n\n\t\tthis._layoutItems( items, isInstant );\n\n\t\tthis._postLayout();\n\t};\n\n\t/**\n\t * get the items to be laid out\n\t * you may want to skip over some items\n\t * @param {Array} items\n\t * @returns {Array} items\n\t */\n\tproto._getItemsForLayout = function( items ) {\n\t\treturn items.filter( function( item ) {\n\t\t\treturn !item.isIgnored;\n\t\t});\n\t};\n\n\t/**\n\t * layout items\n\t * @param {Array} items\n\t * @param {Boolean} isInstant\n\t */\n\tproto._layoutItems = function( items, isInstant ) {\n\t\tthis._emitCompleteOnItems( 'layout', items );\n\n\t\tif ( !items || !items.length ) {\n\t\t\t// no items, emit event with empty array\n\t\t\treturn;\n\t\t}\n\n\t\tvar queue = [];\n\n\t\titems.forEach( function( item ) {\n\t\t\t// get x/y object from method\n\t\t\tvar position = this._getItemLayoutPosition( item );\n\t\t\t// enqueue\n\t\t\tposition.item = item;\n\t\t\tposition.isInstant = isInstant || item.isLayoutInstant;\n\t\t\tqueue.push( position );\n\t\t}, this );\n\n\t\tthis._processLayoutQueue( queue );\n\t};\n\n\t/**\n\t * get item layout position\n\t * @param {Outlayer.Item} item\n\t * @returns {Object} x and y position\n\t */\n\tproto._getItemLayoutPosition = function( /* item */ ) {\n\t\treturn {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t};\n\t};\n\n\t/**\n\t * iterate over array and position each item\n\t * Reason being - separating this logic prevents 'layout invalidation'\n\t * thx @paul_irish\n\t * @param {Array} queue\n\t */\n\tproto._processLayoutQueue = function( queue ) {\n\t\tthis.updateStagger();\n\t\tqueue.forEach( function( obj, i ) {\n\t\t\tthis._positionItem( obj.item, obj.x, obj.y, obj.isInstant, i );\n\t\t}, this );\n\t};\n\n// set stagger from option in milliseconds number\n\tproto.updateStagger = function() {\n\t\tvar stagger = this.options.stagger;\n\t\tif ( stagger === null || stagger === undefined ) {\n\t\t\tthis.stagger = 0;\n\t\t\treturn;\n\t\t}\n\t\tthis.stagger = getMilliseconds( stagger );\n\t\treturn this.stagger;\n\t};\n\n\t/**\n\t * Sets position of item in DOM\n\t * @param {Outlayer.Item} item\n\t * @param {Number} x - horizontal position\n\t * @param {Number} y - vertical position\n\t * @param {Boolean} isInstant - disables transitions\n\t */\n\tproto._positionItem = function( item, x, y, isInstant, i ) {\n\t\tif ( isInstant ) {\n\t\t\t// if not transition, just set CSS\n\t\t\titem.goTo( x, y );\n\t\t} else {\n\t\t\titem.stagger( i * this.stagger );\n\t\t\titem.moveTo( x, y );\n\t\t}\n\t};\n\n\t/**\n\t * Any logic you want to do after each layout,\n\t * i.e. size the container\n\t */\n\tproto._postLayout = function() {\n\t\tthis.resizeContainer();\n\t};\n\n\tproto.resizeContainer = function() {\n\t\tvar isResizingContainer = this._getOption('resizeContainer');\n\t\tif ( !isResizingContainer ) {\n\t\t\treturn;\n\t\t}\n\t\tvar size = this._getContainerSize();\n\t\tif ( size ) {\n\t\t\tthis._setContainerMeasure( size.width, true );\n\t\t\tthis._setContainerMeasure( size.height, false );\n\t\t}\n\t};\n\n\t/**\n\t * Sets width or height of container if returned\n\t * @returns {Object} size\n\t *   @param {Number} width\n\t *   @param {Number} height\n\t */\n\tproto._getContainerSize = noop;\n\n\t/**\n\t * @param {Number} measure - size of width or height\n\t * @param {Boolean} isWidth\n\t */\n\tproto._setContainerMeasure = function( measure, isWidth ) {\n\t\tif ( measure === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar elemSize = this.size;\n\t\t// add padding and border width if border box\n\t\tif ( elemSize.isBorderBox ) {\n\t\t\tmeasure += isWidth ? elemSize.paddingLeft + elemSize.paddingRight +\n\t\t\t                     elemSize.borderLeftWidth + elemSize.borderRightWidth :\n\t\t\t\telemSize.paddingBottom + elemSize.paddingTop +\n\t\t\t\telemSize.borderTopWidth + elemSize.borderBottomWidth;\n\t\t}\n\n\t\tmeasure = Math.max( measure, 0 );\n\t\tthis.element.style[ isWidth ? 'width' : 'height' ] = measure + 'px';\n\t};\n\n\t/**\n\t * emit eventComplete on a collection of items events\n\t * @param {String} eventName\n\t * @param {Array} items - Outlayer.Items\n\t */\n\tproto._emitCompleteOnItems = function( eventName, items ) {\n\t\tvar _this = this;\n\t\tfunction onComplete() {\n\t\t\t_this.dispatchEvent( eventName + 'Complete', null, [ items ] );\n\t\t}\n\n\t\tvar count = items.length;\n\t\tif ( !items || !count ) {\n\t\t\tonComplete();\n\t\t\treturn;\n\t\t}\n\n\t\tvar doneCount = 0;\n\t\tfunction tick() {\n\t\t\tdoneCount++;\n\t\t\tif ( doneCount == count ) {\n\t\t\t\tonComplete();\n\t\t\t}\n\t\t}\n\n\t\t// bind callback\n\t\titems.forEach( function( item ) {\n\t\t\titem.once( eventName, tick );\n\t\t});\n\t};\n\n\t/**\n\t * emits events via EvEmitter and jQuery events\n\t * @param {String} type - name of event\n\t * @param {Event} event - original event\n\t * @param {Array} args - extra arguments\n\t */\n\tproto.dispatchEvent = function( type, event, args ) {\n\t\t// add original event to arguments\n\t\tvar emitArgs = event ? [ event ].concat( args ) : args;\n\t\tthis.emitEvent( type, emitArgs );\n\n\t\tif ( jQuery ) {\n\t\t\t// set this.$element\n\t\t\tthis.$element = this.$element || jQuery( this.element );\n\t\t\tif ( event ) {\n\t\t\t\t// create jQuery event\n\t\t\t\tvar $event = jQuery.Event( event );\n\t\t\t\t$event.type = type;\n\t\t\t\tthis.$element.trigger( $event, args );\n\t\t\t} else {\n\t\t\t\t// just trigger with type if no event available\n\t\t\t\tthis.$element.trigger( type, args );\n\t\t\t}\n\t\t}\n\t};\n\n// -------------------------- ignore & stamps -------------------------- //\n\n\n\t/**\n\t * keep item in collection, but do not lay it out\n\t * ignored items do not get skipped in layout\n\t * @param {Element} elem\n\t */\n\tproto.ignore = function( elem ) {\n\t\tvar item = this.getItem( elem );\n\t\tif ( item ) {\n\t\t\titem.isIgnored = true;\n\t\t}\n\t};\n\n\t/**\n\t * return item to layout collection\n\t * @param {Element} elem\n\t */\n\tproto.unignore = function( elem ) {\n\t\tvar item = this.getItem( elem );\n\t\tif ( item ) {\n\t\t\tdelete item.isIgnored;\n\t\t}\n\t};\n\n\t/**\n\t * adds elements to stamps\n\t * @param {NodeList, Array, Element, or String} elems\n\t */\n\tproto.stamp = function( elems ) {\n\t\telems = this._find( elems );\n\t\tif ( !elems ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.stamps = this.stamps.concat( elems );\n\t\t// ignore\n\t\telems.forEach( this.ignore, this );\n\t};\n\n\t/**\n\t * removes elements to stamps\n\t * @param {NodeList, Array, or Element} elems\n\t */\n\tproto.unstamp = function( elems ) {\n\t\telems = this._find( elems );\n\t\tif ( !elems ){\n\t\t\treturn;\n\t\t}\n\n\t\telems.forEach( function( elem ) {\n\t\t\t// filter out removed stamp elements\n\t\t\tutils.removeFrom( this.stamps, elem );\n\t\t\tthis.unignore( elem );\n\t\t}, this );\n\t};\n\n\t/**\n\t * finds child elements\n\t * @param {NodeList, Array, Element, or String} elems\n\t * @returns {Array} elems\n\t */\n\tproto._find = function( elems ) {\n\t\tif ( !elems ) {\n\t\t\treturn;\n\t\t}\n\t\t// if string, use argument as selector string\n\t\tif ( typeof elems == 'string' ) {\n\t\t\telems = this.element.querySelectorAll( elems );\n\t\t}\n\t\telems = utils.makeArray( elems );\n\t\treturn elems;\n\t};\n\n\tproto._manageStamps = function() {\n\t\tif ( !this.stamps || !this.stamps.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._getBoundingRect();\n\n\t\tthis.stamps.forEach( this._manageStamp, this );\n\t};\n\n// update boundingLeft / Top\n\tproto._getBoundingRect = function() {\n\t\t// get bounding rect for container element\n\t\tvar boundingRect = this.element.getBoundingClientRect();\n\t\tvar size = this.size;\n\t\tthis._boundingRect = {\n\t\t\tleft: boundingRect.left + size.paddingLeft + size.borderLeftWidth,\n\t\t\ttop: boundingRect.top + size.paddingTop + size.borderTopWidth,\n\t\t\tright: boundingRect.right - ( size.paddingRight + size.borderRightWidth ),\n\t\t\tbottom: boundingRect.bottom - ( size.paddingBottom + size.borderBottomWidth )\n\t\t};\n\t};\n\n\t/**\n\t * @param {Element} stamp\n\t **/\n\tproto._manageStamp = noop;\n\n\t/**\n\t * get x/y position of element relative to container element\n\t * @param {Element} elem\n\t * @returns {Object} offset - has left, top, right, bottom\n\t */\n\tproto._getElementOffset = function( elem ) {\n\t\tvar boundingRect = elem.getBoundingClientRect();\n\t\tvar thisRect = this._boundingRect;\n\t\tvar size = getSize( elem );\n\t\tvar offset = {\n\t\t\tleft: boundingRect.left - thisRect.left - size.marginLeft,\n\t\t\ttop: boundingRect.top - thisRect.top - size.marginTop,\n\t\t\tright: thisRect.right - boundingRect.right - size.marginRight,\n\t\t\tbottom: thisRect.bottom - boundingRect.bottom - size.marginBottom\n\t\t};\n\t\treturn offset;\n\t};\n\n// -------------------------- resize -------------------------- //\n\n// enable event handlers for listeners\n// i.e. resize -> onresize\n\tproto.handleEvent = utils.handleEvent;\n\n\t/**\n\t * Bind layout to window resizing\n\t */\n\tproto.bindResize = function() {\n\t\twindow.addEventListener( 'resize', this );\n\t\tthis.isResizeBound = true;\n\t};\n\n\t/**\n\t * Unbind layout to window resizing\n\t */\n\tproto.unbindResize = function() {\n\t\twindow.removeEventListener( 'resize', this );\n\t\tthis.isResizeBound = false;\n\t};\n\n\tproto.onresize = function() {\n\t\tthis.resize();\n\t};\n\n\tutils.debounceMethod( Outlayer, 'onresize', 100 );\n\n\tproto.resize = function() {\n\t\t// don't trigger if size did not change\n\t\t// or if resize was unbound. See #9\n\t\tif ( !this.isResizeBound || !this.needsResizeLayout() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.layout();\n\t};\n\n\t/**\n\t * check if layout is needed post layout\n\t * @returns Boolean\n\t */\n\tproto.needsResizeLayout = function() {\n\t\tvar size = getSize( this.element );\n\t\t// check that this.size and size are there\n\t\t// IE8 triggers resize on body size change, so they might not be\n\t\tvar hasSizes = this.size && size;\n\t\treturn hasSizes && size.innerWidth !== this.size.innerWidth;\n\t};\n\n// -------------------------- methods -------------------------- //\n\n\t/**\n\t * add items to Outlayer instance\n\t * @param {Array or NodeList or Element} elems\n\t * @returns {Array} items - Outlayer.Items\n\t **/\n\tproto.addItems = function( elems ) {\n\t\tvar items = this._itemize( elems );\n\t\t// add items to collection\n\t\tif ( items.length ) {\n\t\t\tthis.items = this.items.concat( items );\n\t\t}\n\t\treturn items;\n\t};\n\n\t/**\n\t * Layout newly-appended item elements\n\t * @param {Array or NodeList or Element} elems\n\t */\n\tproto.appended = function( elems ) {\n\t\tvar items = this.addItems( elems );\n\t\tif ( !items.length ) {\n\t\t\treturn;\n\t\t}\n\t\t// layout and reveal just the new items\n\t\tthis.layoutItems( items, true );\n\t\tthis.reveal( items );\n\t};\n\n\t/**\n\t * Layout prepended elements\n\t * @param {Array or NodeList or Element} elems\n\t */\n\tproto.prepended = function( elems ) {\n\t\tvar items = this._itemize( elems );\n\t\tif ( !items.length ) {\n\t\t\treturn;\n\t\t}\n\t\t// add items to beginning of collection\n\t\tvar previousItems = this.items.slice(0);\n\t\tthis.items = items.concat( previousItems );\n\t\t// start new layout\n\t\tthis._resetLayout();\n\t\tthis._manageStamps();\n\t\t// layout new stuff without transition\n\t\tthis.layoutItems( items, true );\n\t\tthis.reveal( items );\n\t\t// layout previous items\n\t\tthis.layoutItems( previousItems );\n\t};\n\n\t/**\n\t * reveal a collection of items\n\t * @param {Array of Outlayer.Items} items\n\t */\n\tproto.reveal = function( items ) {\n\t\tthis._emitCompleteOnItems( 'reveal', items );\n\t\tif ( !items || !items.length ) {\n\t\t\treturn;\n\t\t}\n\t\tvar stagger = this.updateStagger();\n\t\titems.forEach( function( item, i ) {\n\t\t\titem.stagger( i * stagger );\n\t\t\titem.reveal();\n\t\t});\n\t};\n\n\t/**\n\t * hide a collection of items\n\t * @param {Array of Outlayer.Items} items\n\t */\n\tproto.hide = function( items ) {\n\t\tthis._emitCompleteOnItems( 'hide', items );\n\t\tif ( !items || !items.length ) {\n\t\t\treturn;\n\t\t}\n\t\tvar stagger = this.updateStagger();\n\t\titems.forEach( function( item, i ) {\n\t\t\titem.stagger( i * stagger );\n\t\t\titem.hide();\n\t\t});\n\t};\n\n\t/**\n\t * reveal item elements\n\t * @param {Array}, {Element}, {NodeList} items\n\t */\n\tproto.revealItemElements = function( elems ) {\n\t\tvar items = this.getItems( elems );\n\t\tthis.reveal( items );\n\t};\n\n\t/**\n\t * hide item elements\n\t * @param {Array}, {Element}, {NodeList} items\n\t */\n\tproto.hideItemElements = function( elems ) {\n\t\tvar items = this.getItems( elems );\n\t\tthis.hide( items );\n\t};\n\n\t/**\n\t * get Outlayer.Item, given an Element\n\t * @param {Element} elem\n\t * @param {Function} callback\n\t * @returns {Outlayer.Item} item\n\t */\n\tproto.getItem = function( elem ) {\n\t\t// loop through items to get the one that matches\n\t\tfor ( var i=0; i < this.items.length; i++ ) {\n\t\t\tvar item = this.items[i];\n\t\t\tif ( item.element == elem ) {\n\t\t\t\t// return item\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * get collection of Outlayer.Items, given Elements\n\t * @param {Array} elems\n\t * @returns {Array} items - Outlayer.Items\n\t */\n\tproto.getItems = function( elems ) {\n\t\telems = utils.makeArray( elems );\n\t\tvar items = [];\n\t\telems.forEach( function( elem ) {\n\t\t\tvar item = this.getItem( elem );\n\t\t\tif ( item ) {\n\t\t\t\titems.push( item );\n\t\t\t}\n\t\t}, this );\n\n\t\treturn items;\n\t};\n\n\t/**\n\t * remove element(s) from instance and DOM\n\t * @param {Array or NodeList or Element} elems\n\t */\n\tproto.remove = function( elems ) {\n\t\tvar removeItems = this.getItems( elems );\n\n\t\tthis._emitCompleteOnItems( 'remove', removeItems );\n\n\t\t// bail if no items to remove\n\t\tif ( !removeItems || !removeItems.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveItems.forEach( function( item ) {\n\t\t\titem.remove();\n\t\t\t// remove item from collection\n\t\t\tutils.removeFrom( this.items, item );\n\t\t}, this );\n\t};\n\n// ----- destroy ----- //\n\n// remove and disable Outlayer instance\n\tproto.destroy = function() {\n\t\t// clean up dynamic styles\n\t\tvar style = this.element.style;\n\t\tstyle.height = '';\n\t\tstyle.position = '';\n\t\tstyle.width = '';\n\t\t// destroy items\n\t\tthis.items.forEach( function( item ) {\n\t\t\titem.destroy();\n\t\t});\n\n\t\tthis.unbindResize();\n\n\t\tvar id = this.element.outlayerGUID;\n\t\tdelete instances[ id ]; // remove reference to instance by id\n\t\tdelete this.element.outlayerGUID;\n\t\t// remove data for jQuery\n\t\tif ( jQuery ) {\n\t\t\tjQuery.removeData( this.element, this.constructor.namespace );\n\t\t}\n\n\t};\n\n// -------------------------- data -------------------------- //\n\n\t/**\n\t * get Outlayer instance from element\n\t * @param {Element} elem\n\t * @returns {Outlayer}\n\t */\n\tOutlayer.data = function( elem ) {\n\t\telem = utils.getQueryElement( elem );\n\t\tvar id = elem && elem.outlayerGUID;\n\t\treturn id && instances[ id ];\n\t};\n\n\n// -------------------------- create Outlayer class -------------------------- //\n\n\t/**\n\t * create a layout class\n\t * @param {String} namespace\n\t */\n\tOutlayer.create = function( namespace, options ) {\n\t\t// sub-class Outlayer\n\t\tvar Layout = subclass( Outlayer );\n\t\t// apply new options and compatOptions\n\t\tLayout.defaults = utils.extend( {}, Outlayer.defaults );\n\t\tutils.extend( Layout.defaults, options );\n\t\tLayout.compatOptions = utils.extend( {}, Outlayer.compatOptions  );\n\n\t\tLayout.namespace = namespace;\n\n\t\tLayout.data = Outlayer.data;\n\n\t\t// sub-class Item\n\t\tLayout.Item = subclass( Item );\n\n\t\t// -------------------------- declarative -------------------------- //\n\n\t\tutils.htmlInit( Layout, namespace );\n\n\t\t// -------------------------- jQuery bridge -------------------------- //\n\n\t\t// make into jQuery plugin\n\t\tif ( jQuery && jQuery.bridget ) {\n\t\t\tjQuery.bridget( namespace, Layout );\n\t\t}\n\n\t\treturn Layout;\n\t};\n\n\tfunction subclass( Parent ) {\n\t\tfunction SubClass() {\n\t\t\tParent.apply( this, arguments );\n\t\t}\n\n\t\tSubClass.prototype = Object.create( Parent.prototype );\n\t\tSubClass.prototype.constructor = SubClass;\n\n\t\treturn SubClass;\n\t}\n\n// ----- helpers ----- //\n\n// how many milliseconds are in each unit\n\tvar msUnits = {\n\t\tms: 1,\n\t\ts: 1000\n\t};\n\n// munge time-like parameter into millisecond number\n// '0.4s' -> 40\n\tfunction getMilliseconds( time ) {\n\t\tif ( typeof time == 'number' ) {\n\t\t\treturn time;\n\t\t}\n\t\tvar matches = time.match( /(^\\d*\\.?\\d*)(\\w*)/ );\n\t\tvar num = matches && matches[1];\n\t\tvar unit = matches && matches[2];\n\t\tif ( !num.length ) {\n\t\t\treturn 0;\n\t\t}\n\t\tnum = parseFloat( num );\n\t\tvar mult = msUnits[ unit ] || 1;\n\t\treturn num * mult;\n\t}\n\n// ----- fin ----- //\n\n// back in global\n\tOutlayer.Item = Item;\n\n\treturn Outlayer;\n\n}));\n\n/**\n * Isotope Item\n **/\n\n( function( window, factory ) {\n\t// universal module definition\n\t/* jshint strict: false */ /*globals define, module, require */\n\tif ( typeof define == 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( 'isotope-layout/js/item',[\n\t\t\t\t'outlayer/outlayer'\n\t\t\t],\n\t\t\tfactory );\n\t} else if ( typeof module == 'object' && module.exports ) {\n\t\t// CommonJS\n\t\tmodule.exports = factory(\n\t\t\trequire('outlayer')\n\t\t);\n\t} else {\n\t\t// browser global\n\t\twindow.Isotope = window.Isotope || {};\n\t\twindow.Isotope.Item = factory(\n\t\t\twindow.Outlayer\n\t\t);\n\t}\n\n}( window, function factory( Outlayer ) {\n\t'use strict';\n\n// -------------------------- Item -------------------------- //\n\n// sub-class Outlayer Item\n\tfunction Item() {\n\t\tOutlayer.Item.apply( this, arguments );\n\t}\n\n\tvar proto = Item.prototype = Object.create( Outlayer.Item.prototype );\n\n\tvar _create = proto._create;\n\tproto._create = function() {\n\t\t// assign id, used for original-order sorting\n\t\tthis.id = this.layout.itemGUID++;\n\t\t_create.call( this );\n\t\tthis.sortData = {};\n\t};\n\n\tproto.updateSortData = function() {\n\t\tif ( this.isIgnored ) {\n\t\t\treturn;\n\t\t}\n\t\t// default sorters\n\t\tthis.sortData.id = this.id;\n\t\t// for backward compatibility\n\t\tthis.sortData['original-order'] = this.id;\n\t\tthis.sortData.random = Math.random();\n\t\t// go thru getSortData obj and apply the sorters\n\t\tvar getSortData = this.layout.options.getSortData;\n\t\tvar sorters = this.layout._sorters;\n\t\tfor ( var key in getSortData ) {\n\t\t\tvar sorter = sorters[ key ];\n\t\t\tthis.sortData[ key ] = sorter( this.element, this );\n\t\t}\n\t};\n\n\tvar _destroy = proto.destroy;\n\tproto.destroy = function() {\n\t\t// call super\n\t\t_destroy.apply( this, arguments );\n\t\t// reset display, #741\n\t\tthis.css({\n\t\t\tdisplay: ''\n\t\t});\n\t};\n\n\treturn Item;\n\n}));\n\n/**\n * Isotope LayoutMode\n */\n\n( function( window, factory ) {\n\t// universal module definition\n\t/* jshint strict: false */ /*globals define, module, require */\n\tif ( typeof define == 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( 'isotope-layout/js/layout-mode',[\n\t\t\t\t'get-size/get-size',\n\t\t\t\t'outlayer/outlayer'\n\t\t\t],\n\t\t\tfactory );\n\t} else if ( typeof module == 'object' && module.exports ) {\n\t\t// CommonJS\n\t\tmodule.exports = factory(\n\t\t\trequire('get-size'),\n\t\t\trequire('outlayer')\n\t\t);\n\t} else {\n\t\t// browser global\n\t\twindow.Isotope = window.Isotope || {};\n\t\twindow.Isotope.LayoutMode = factory(\n\t\t\twindow.getSize,\n\t\t\twindow.Outlayer\n\t\t);\n\t}\n\n}( window, function factory( getSize, Outlayer ) {\n\t'use strict';\n\n\t// layout mode class\n\tfunction LayoutMode( isotope ) {\n\t\tthis.isotope = isotope;\n\t\t// link properties\n\t\tif ( isotope ) {\n\t\t\tthis.options = isotope.options[ this.namespace ];\n\t\t\tthis.element = isotope.element;\n\t\t\tthis.items = isotope.filteredItems;\n\t\t\tthis.size = isotope.size;\n\t\t}\n\t}\n\n\tvar proto = LayoutMode.prototype;\n\n\t/**\n\t * some methods should just defer to default Outlayer method\n\t * and reference the Isotope instance as `this`\n\t **/\n\tvar facadeMethods = [\n\t\t'_resetLayout',\n\t\t'_getItemLayoutPosition',\n\t\t'_manageStamp',\n\t\t'_getContainerSize',\n\t\t'_getElementOffset',\n\t\t'needsResizeLayout',\n\t\t'_getOption'\n\t];\n\n\tfacadeMethods.forEach( function( methodName ) {\n\t\tproto[ methodName ] = function() {\n\t\t\treturn Outlayer.prototype[ methodName ].apply( this.isotope, arguments );\n\t\t};\n\t});\n\n\t// -----  ----- //\n\n\t// for horizontal layout modes, check vertical size\n\tproto.needsVerticalResizeLayout = function() {\n\t\t// don't trigger if size did not change\n\t\tvar size = getSize( this.isotope.element );\n\t\t// check that this.size and size are there\n\t\t// IE8 triggers resize on body size change, so they might not be\n\t\tvar hasSizes = this.isotope.size && size;\n\t\treturn hasSizes && size.innerHeight != this.isotope.size.innerHeight;\n\t};\n\n\t// ----- measurements ----- //\n\n\tproto._getMeasurement = function() {\n\t\tthis.isotope._getMeasurement.apply( this, arguments );\n\t};\n\n\tproto.getColumnWidth = function() {\n\t\tthis.getSegmentSize( 'column', 'Width' );\n\t};\n\n\tproto.getRowHeight = function() {\n\t\tthis.getSegmentSize( 'row', 'Height' );\n\t};\n\n\t/**\n\t * get columnWidth or rowHeight\n\t * segment: 'column' or 'row'\n\t * size 'Width' or 'Height'\n\t **/\n\tproto.getSegmentSize = function( segment, size ) {\n\t\tvar segmentName = segment + size;\n\t\tvar outerSize = 'outer' + size;\n\t\t// columnWidth / outerWidth // rowHeight / outerHeight\n\t\tthis._getMeasurement( segmentName, outerSize );\n\t\t// got rowHeight or columnWidth, we can chill\n\t\tif ( this[ segmentName ] ) {\n\t\t\treturn;\n\t\t}\n\t\t// fall back to item of first element\n\t\tvar firstItemSize = this.getFirstItemSize();\n\t\tthis[ segmentName ] = firstItemSize && firstItemSize[ outerSize ] ||\n\t\t                      // or size of container\n\t\t                      this.isotope.size[ 'inner' + size ];\n\t};\n\n\tproto.getFirstItemSize = function() {\n\t\tvar firstItem = this.isotope.filteredItems[0];\n\t\treturn firstItem && firstItem.element && getSize( firstItem.element );\n\t};\n\n\t// ----- methods that should reference isotope ----- //\n\n\tproto.layout = function() {\n\t\tthis.isotope.layout.apply( this.isotope, arguments );\n\t};\n\n\tproto.getSize = function() {\n\t\tthis.isotope.getSize();\n\t\tthis.size = this.isotope.size;\n\t};\n\n\t// -------------------------- create -------------------------- //\n\n\tLayoutMode.modes = {};\n\n\tLayoutMode.create = function( namespace, options ) {\n\n\t\tfunction Mode() {\n\t\t\tLayoutMode.apply( this, arguments );\n\t\t}\n\n\t\tMode.prototype = Object.create( proto );\n\t\tMode.prototype.constructor = Mode;\n\n\t\t// default options\n\t\tif ( options ) {\n\t\t\tMode.options = options;\n\t\t}\n\n\t\tMode.prototype.namespace = namespace;\n\t\t// register in Isotope\n\t\tLayoutMode.modes[ namespace ] = Mode;\n\n\t\treturn Mode;\n\t};\n\n\treturn LayoutMode;\n\n}));\n\n/*!\n * Masonry v4.2.1\n * Cascading grid layout library\n * https://masonry.desandro.com\n * MIT License\n * by David DeSandro\n */\n\n( function( window, factory ) {\n\t// universal module definition\n\t/* jshint strict: false */ /*globals define, module, require */\n\tif ( typeof define == 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( 'masonry-layout/masonry',[\n\t\t\t\t'outlayer/outlayer',\n\t\t\t\t'get-size/get-size'\n\t\t\t],\n\t\t\tfactory );\n\t} else if ( typeof module == 'object' && module.exports ) {\n\t\t// CommonJS\n\t\tmodule.exports = factory(\n\t\t\trequire('outlayer'),\n\t\t\trequire('get-size')\n\t\t);\n\t} else {\n\t\t// browser global\n\t\twindow.Masonry = factory(\n\t\t\twindow.Outlayer,\n\t\t\twindow.getSize\n\t\t);\n\t}\n\n}( window, function factory( Outlayer, getSize ) {\n\n\n\n// -------------------------- masonryDefinition -------------------------- //\n\n\t// create an Outlayer layout class\n\tvar Masonry = Outlayer.create('masonry');\n\t// isFitWidth -> fitWidth\n\tMasonry.compatOptions.fitWidth = 'isFitWidth';\n\n\tvar proto = Masonry.prototype;\n\n\tproto._resetLayout = function() {\n\t\tthis.getSize();\n\t\tthis._getMeasurement( 'columnWidth', 'outerWidth' );\n\t\tthis._getMeasurement( 'gutter', 'outerWidth' );\n\t\tthis.measureColumns();\n\n\t\t// reset column Y\n\t\tthis.colYs = [];\n\t\tfor ( var i=0; i < this.cols; i++ ) {\n\t\t\tthis.colYs.push( 0 );\n\t\t}\n\n\t\tthis.maxY = 0;\n\t\tthis.horizontalColIndex = 0;\n\t};\n\n\tproto.measureColumns = function() {\n\t\tthis.getContainerWidth();\n\t\t// if columnWidth is 0, default to outerWidth of first item\n\t\tif ( !this.columnWidth ) {\n\t\t\tvar firstItem = this.items[0];\n\t\t\tvar firstItemElem = firstItem && firstItem.element;\n\t\t\t// columnWidth fall back to item of first element\n\t\t\tthis.columnWidth = firstItemElem && getSize( firstItemElem ).outerWidth ||\n\t\t\t                   // if first elem has no width, default to size of container\n\t\t\t                   this.containerWidth;\n\t\t}\n\n\t\tvar columnWidth = this.columnWidth += this.gutter;\n\n\t\t// calculate columns\n\t\tvar containerWidth = this.containerWidth + this.gutter;\n\t\tvar cols = containerWidth / columnWidth;\n\t\t// fix rounding errors, typically with gutters\n\t\tvar excess = columnWidth - containerWidth % columnWidth;\n\t\t// if overshoot is less than a pixel, round up, otherwise floor it\n\t\tvar mathMethod = excess && excess < 1 ? 'round' : 'floor';\n\t\tcols = Math[ mathMethod ]( cols );\n\t\tthis.cols = Math.max( cols, 1 );\n\t};\n\n\tproto.getContainerWidth = function() {\n\t\t// container is parent if fit width\n\t\tvar isFitWidth = this._getOption('fitWidth');\n\t\tvar container = isFitWidth ? this.element.parentNode : this.element;\n\t\t// check that this.size and size are there\n\t\t// IE8 triggers resize on body size change, so they might not be\n\t\tvar size = getSize( container );\n\t\tthis.containerWidth = size && size.innerWidth;\n\t};\n\n\tproto._getItemLayoutPosition = function( item ) {\n\t\titem.getSize();\n\t\t// how many columns does this brick span\n\t\tvar remainder = item.size.outerWidth % this.columnWidth;\n\t\tvar mathMethod = remainder && remainder < 1 ? 'round' : 'ceil';\n\t\t// round if off by 1 pixel, otherwise use ceil\n\t\tvar colSpan = Math[ mathMethod ]( item.size.outerWidth / this.columnWidth );\n\t\tcolSpan = Math.min( colSpan, this.cols );\n\t\t// use horizontal or top column position\n\t\tvar colPosMethod = this.options.horizontalOrder ?\n\t\t\t'_getHorizontalColPosition' : '_getTopColPosition';\n\t\tvar colPosition = this[ colPosMethod ]( colSpan, item );\n\t\t// position the brick\n\t\tvar position = {\n\t\t\tx: this.columnWidth * colPosition.col,\n\t\t\ty: colPosition.y\n\t\t};\n\t\t// apply setHeight to necessary columns\n\t\tvar setHeight = colPosition.y + item.size.outerHeight;\n\t\tvar setMax = colSpan + colPosition.col;\n\t\tfor ( var i = colPosition.col; i < setMax; i++ ) {\n\t\t\tthis.colYs[i] = setHeight;\n\t\t}\n\n\t\treturn position;\n\t};\n\n\tproto._getTopColPosition = function( colSpan ) {\n\t\tvar colGroup = this._getTopColGroup( colSpan );\n\t\t// get the minimum Y value from the columns\n\t\tvar minimumY = Math.min.apply( Math, colGroup );\n\n\t\treturn {\n\t\t\tcol: colGroup.indexOf( minimumY ),\n\t\t\ty: minimumY,\n\t\t};\n\t};\n\n\t/**\n\t * @param {Number} colSpan - number of columns the element spans\n\t * @returns {Array} colGroup\n\t */\n\tproto._getTopColGroup = function( colSpan ) {\n\t\tif ( colSpan < 2 ) {\n\t\t\t// if brick spans only one column, use all the column Ys\n\t\t\treturn this.colYs;\n\t\t}\n\n\t\tvar colGroup = [];\n\t\t// how many different places could this brick fit horizontally\n\t\tvar groupCount = this.cols + 1 - colSpan;\n\t\t// for each group potential horizontal position\n\t\tfor ( var i = 0; i < groupCount; i++ ) {\n\t\t\tcolGroup[i] = this._getColGroupY( i, colSpan );\n\t\t}\n\t\treturn colGroup;\n\t};\n\n\tproto._getColGroupY = function( col, colSpan ) {\n\t\tif ( colSpan < 2 ) {\n\t\t\treturn this.colYs[ col ];\n\t\t}\n\t\t// make an array of colY values for that one group\n\t\tvar groupColYs = this.colYs.slice( col, col + colSpan );\n\t\t// and get the max value of the array\n\t\treturn Math.max.apply( Math, groupColYs );\n\t};\n\n\t// get column position based on horizontal index. #873\n\tproto._getHorizontalColPosition = function( colSpan, item ) {\n\t\tvar col = this.horizontalColIndex % this.cols;\n\t\tvar isOver = colSpan > 1 && col + colSpan > this.cols;\n\t\t// shift to next row if item can't fit on current row\n\t\tcol = isOver ? 0 : col;\n\t\t// don't let zero-size items take up space\n\t\tvar hasSize = item.size.outerWidth && item.size.outerHeight;\n\t\tthis.horizontalColIndex = hasSize ? col + colSpan : this.horizontalColIndex;\n\n\t\treturn {\n\t\t\tcol: col,\n\t\t\ty: this._getColGroupY( col, colSpan ),\n\t\t};\n\t};\n\n\tproto._manageStamp = function( stamp ) {\n\t\tvar stampSize = getSize( stamp );\n\t\tvar offset = this._getElementOffset( stamp );\n\t\t// get the columns that this stamp affects\n\t\tvar isOriginLeft = this._getOption('originLeft');\n\t\tvar firstX = isOriginLeft ? offset.left : offset.right;\n\t\tvar lastX = firstX + stampSize.outerWidth;\n\t\tvar firstCol = Math.floor( firstX / this.columnWidth );\n\t\tfirstCol = Math.max( 0, firstCol );\n\t\tvar lastCol = Math.floor( lastX / this.columnWidth );\n\t\t// lastCol should not go over if multiple of columnWidth #425\n\t\tlastCol -= lastX % this.columnWidth ? 0 : 1;\n\t\tlastCol = Math.min( this.cols - 1, lastCol );\n\t\t// set colYs to bottom of the stamp\n\n\t\tvar isOriginTop = this._getOption('originTop');\n\t\tvar stampMaxY = ( isOriginTop ? offset.top : offset.bottom ) +\n\t\t                stampSize.outerHeight;\n\t\tfor ( var i = firstCol; i <= lastCol; i++ ) {\n\t\t\tthis.colYs[i] = Math.max( stampMaxY, this.colYs[i] );\n\t\t}\n\t};\n\n\tproto._getContainerSize = function() {\n\t\tthis.maxY = Math.max.apply( Math, this.colYs );\n\t\tvar size = {\n\t\t\theight: this.maxY\n\t\t};\n\n\t\tif ( this._getOption('fitWidth') ) {\n\t\t\tsize.width = this._getContainerFitWidth();\n\t\t}\n\n\t\treturn size;\n\t};\n\n\tproto._getContainerFitWidth = function() {\n\t\tvar unusedCols = 0;\n\t\t// count unused columns\n\t\tvar i = this.cols;\n\t\twhile ( --i ) {\n\t\t\tif ( this.colYs[i] !== 0 ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tunusedCols++;\n\t\t}\n\t\t// fit container to columns that have been used\n\t\treturn ( this.cols - unusedCols ) * this.columnWidth - this.gutter;\n\t};\n\n\tproto.needsResizeLayout = function() {\n\t\tvar previousWidth = this.containerWidth;\n\t\tthis.getContainerWidth();\n\t\treturn previousWidth != this.containerWidth;\n\t};\n\n\treturn Masonry;\n\n}));\n\n/*!\n * Masonry layout mode\n * sub-classes Masonry\n * https://masonry.desandro.com\n */\n\n( function( window, factory ) {\n\t// universal module definition\n\t/* jshint strict: false */ /*globals define, module, require */\n\tif ( typeof define == 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( 'isotope-layout/js/layout-modes/masonry',[\n\t\t\t\t'../layout-mode',\n\t\t\t\t'masonry-layout/masonry'\n\t\t\t],\n\t\t\tfactory );\n\t} else if ( typeof module == 'object' && module.exports ) {\n\t\t// CommonJS\n\t\tmodule.exports = factory(\n\t\t\trequire('../layout-mode'),\n\t\t\trequire('masonry-layout')\n\t\t);\n\t} else {\n\t\t// browser global\n\t\tfactory(\n\t\t\twindow.Isotope.LayoutMode,\n\t\t\twindow.Masonry\n\t\t);\n\t}\n\n}( window, function factory( LayoutMode, Masonry ) {\n\t'use strict';\n\n// -------------------------- masonryDefinition -------------------------- //\n\n\t// create an Outlayer layout class\n\tvar MasonryMode = LayoutMode.create('masonry');\n\n\tvar proto = MasonryMode.prototype;\n\n\tvar keepModeMethods = {\n\t\t_getElementOffset: true,\n\t\tlayout: true,\n\t\t_getMeasurement: true\n\t};\n\n\t// inherit Masonry prototype\n\tfor ( var method in Masonry.prototype ) {\n\t\t// do not inherit mode methods\n\t\tif ( !keepModeMethods[ method ] ) {\n\t\t\tproto[ method ] = Masonry.prototype[ method ];\n\t\t}\n\t}\n\n\tvar measureColumns = proto.measureColumns;\n\tproto.measureColumns = function() {\n\t\t// set items, used if measuring first item\n\t\tthis.items = this.isotope.filteredItems;\n\t\tmeasureColumns.call( this );\n\t};\n\n\t// point to mode options for fitWidth\n\tvar _getOption = proto._getOption;\n\tproto._getOption = function( option ) {\n\t\tif ( option == 'fitWidth' ) {\n\t\t\treturn this.options.isFitWidth !== undefined ?\n\t\t\t\tthis.options.isFitWidth : this.options.fitWidth;\n\t\t}\n\t\treturn _getOption.apply( this.isotope, arguments );\n\t};\n\n\treturn MasonryMode;\n\n}));\n\n/**\n * fitRows layout mode\n */\n\n( function( window, factory ) {\n\t// universal module definition\n\t/* jshint strict: false */ /*globals define, module, require */\n\tif ( typeof define == 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( 'isotope-layout/js/layout-modes/fit-rows',[\n\t\t\t\t'../layout-mode'\n\t\t\t],\n\t\t\tfactory );\n\t} else if ( typeof exports == 'object' ) {\n\t\t// CommonJS\n\t\tmodule.exports = factory(\n\t\t\trequire('../layout-mode')\n\t\t);\n\t} else {\n\t\t// browser global\n\t\tfactory(\n\t\t\twindow.Isotope.LayoutMode\n\t\t);\n\t}\n\n}( window, function factory( LayoutMode ) {\n\t'use strict';\n\n\tvar FitRows = LayoutMode.create('fitRows');\n\n\tvar proto = FitRows.prototype;\n\n\tproto._resetLayout = function() {\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t\tthis.maxY = 0;\n\t\tthis._getMeasurement( 'gutter', 'outerWidth' );\n\t};\n\n\tproto._getItemLayoutPosition = function( item ) {\n\t\titem.getSize();\n\n\t\tvar itemWidth = item.size.outerWidth + this.gutter;\n\t\t// if this element cannot fit in the current row\n\t\tvar containerWidth = this.isotope.size.innerWidth + this.gutter;\n\t\tif ( this.x !== 0 && itemWidth + this.x > containerWidth ) {\n\t\t\tthis.x = 0;\n\t\t\tthis.y = this.maxY;\n\t\t}\n\n\t\tvar position = {\n\t\t\tx: this.x,\n\t\t\ty: this.y\n\t\t};\n\n\t\tthis.maxY = Math.max( this.maxY, this.y + item.size.outerHeight );\n\t\tthis.x += itemWidth;\n\n\t\treturn position;\n\t};\n\n\tproto._getContainerSize = function() {\n\t\treturn { height: this.maxY };\n\t};\n\n\treturn FitRows;\n\n}));\n\n/**\n * vertical layout mode\n */\n\n( function( window, factory ) {\n\t// universal module definition\n\t/* jshint strict: false */ /*globals define, module, require */\n\tif ( typeof define == 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( 'isotope-layout/js/layout-modes/vertical',[\n\t\t\t\t'../layout-mode'\n\t\t\t],\n\t\t\tfactory );\n\t} else if ( typeof module == 'object' && module.exports ) {\n\t\t// CommonJS\n\t\tmodule.exports = factory(\n\t\t\trequire('../layout-mode')\n\t\t);\n\t} else {\n\t\t// browser global\n\t\tfactory(\n\t\t\twindow.Isotope.LayoutMode\n\t\t);\n\t}\n\n}( window, function factory( LayoutMode ) {\n\t'use strict';\n\n\tvar Vertical = LayoutMode.create( 'vertical', {\n\t\thorizontalAlignment: 0\n\t});\n\n\tvar proto = Vertical.prototype;\n\n\tproto._resetLayout = function() {\n\t\tthis.y = 0;\n\t};\n\n\tproto._getItemLayoutPosition = function( item ) {\n\t\titem.getSize();\n\t\tvar x = ( this.isotope.size.innerWidth - item.size.outerWidth ) *\n\t\t        this.options.horizontalAlignment;\n\t\tvar y = this.y;\n\t\tthis.y += item.size.outerHeight;\n\t\treturn { x: x, y: y };\n\t};\n\n\tproto._getContainerSize = function() {\n\t\treturn { height: this.y };\n\t};\n\n\treturn Vertical;\n\n}));\n\n/*!\n * Isotope v3.0.6\n *\n * Licensed GPLv3 for open source use\n * or Isotope Commercial License for commercial use\n *\n * https://isotope.metafizzy.co\n * Copyright 2010-2018 Metafizzy\n */\n\n( function( window, factory ) {\n\t// universal module definition\n\t/* jshint strict: false */ /*globals define, module, require */\n\tif ( typeof define == 'function' && define.amd ) {\n\t\t// AMD\n\t\tdefine( [\n\t\t\t\t'outlayer/outlayer',\n\t\t\t\t'get-size/get-size',\n\t\t\t\t'desandro-matches-selector/matches-selector',\n\t\t\t\t'fizzy-ui-utils/utils',\n\t\t\t\t'isotope-layout/js/item',\n\t\t\t\t'isotope-layout/js/layout-mode',\n\t\t\t\t// include default layout modes\n\t\t\t\t'isotope-layout/js/layout-modes/masonry',\n\t\t\t\t'isotope-layout/js/layout-modes/fit-rows',\n\t\t\t\t'isotope-layout/js/layout-modes/vertical'\n\t\t\t],\n\t\t\tfunction( Outlayer, getSize, matchesSelector, utils, Item, LayoutMode ) {\n\t\t\t\treturn factory( window, Outlayer, getSize, matchesSelector, utils, Item, LayoutMode );\n\t\t\t});\n\t} else if ( typeof module == 'object' && module.exports ) {\n\t\t// CommonJS\n\t\tmodule.exports = factory(\n\t\t\twindow,\n\t\t\trequire('outlayer'),\n\t\t\trequire('get-size'),\n\t\t\trequire('desandro-matches-selector'),\n\t\t\trequire('fizzy-ui-utils'),\n\t\t\trequire('isotope-layout/js/item'),\n\t\t\trequire('isotope-layout/js/layout-mode'),\n\t\t\t// include default layout modes\n\t\t\trequire('isotope-layout/js/layout-modes/masonry'),\n\t\t\trequire('isotope-layout/js/layout-modes/fit-rows'),\n\t\t\trequire('isotope-layout/js/layout-modes/vertical')\n\t\t);\n\t} else {\n\t\t// browser global\n\t\twindow.Isotope = factory(\n\t\t\twindow,\n\t\t\twindow.Outlayer,\n\t\t\twindow.getSize,\n\t\t\twindow.matchesSelector,\n\t\t\twindow.fizzyUIUtils,\n\t\t\twindow.Isotope.Item,\n\t\t\twindow.Isotope.LayoutMode\n\t\t);\n\t}\n\n}( window, function factory( window, Outlayer, getSize, matchesSelector, utils,\n\tItem, LayoutMode ) {\n\n\n\n// -------------------------- vars -------------------------- //\n\n\tvar jQuery = window.jQuery;\n\n// -------------------------- helpers -------------------------- //\n\n\tvar trim = String.prototype.trim ?\n\t\tfunction( str ) {\n\t\t\treturn str.trim();\n\t\t} :\n\t\tfunction( str ) {\n\t\t\treturn str.replace( /^\\s+|\\s+$/g, '' );\n\t\t};\n\n// -------------------------- isotopeDefinition -------------------------- //\n\n\t// create an Outlayer layout class\n\tvar Isotope = Outlayer.create( 'isotope', {\n\t\tlayoutMode: 'masonry',\n\t\tisJQueryFiltering: true,\n\t\tsortAscending: true\n\t});\n\n\tIsotope.Item = Item;\n\tIsotope.LayoutMode = LayoutMode;\n\n\tvar proto = Isotope.prototype;\n\n\tproto._create = function() {\n\t\tthis.itemGUID = 0;\n\t\t// functions that sort items\n\t\tthis._sorters = {};\n\t\tthis._getSorters();\n\t\t// call super\n\t\tOutlayer.prototype._create.call( this );\n\n\t\t// create layout modes\n\t\tthis.modes = {};\n\t\t// start filteredItems with all items\n\t\tthis.filteredItems = this.items;\n\t\t// keep of track of sortBys\n\t\tthis.sortHistory = [ 'original-order' ];\n\t\t// create from registered layout modes\n\t\tfor ( var name in LayoutMode.modes ) {\n\t\t\tthis._initLayoutMode( name );\n\t\t}\n\t};\n\n\tproto.reloadItems = function() {\n\t\t// reset item ID counter\n\t\tthis.itemGUID = 0;\n\t\t// call super\n\t\tOutlayer.prototype.reloadItems.call( this );\n\t};\n\n\tproto._itemize = function() {\n\t\tvar items = Outlayer.prototype._itemize.apply( this, arguments );\n\t\t// assign ID for original-order\n\t\tfor ( var i=0; i < items.length; i++ ) {\n\t\t\tvar item = items[i];\n\t\t\titem.id = this.itemGUID++;\n\t\t}\n\t\tthis._updateItemsSortData( items );\n\t\treturn items;\n\t};\n\n\n\t// -------------------------- layout -------------------------- //\n\n\tproto._initLayoutMode = function( name ) {\n\t\tvar Mode = LayoutMode.modes[ name ];\n\t\t// set mode options\n\t\t// HACK extend initial options, back-fill in default options\n\t\tvar initialOpts = this.options[ name ] || {};\n\t\tthis.options[ name ] = Mode.options ?\n\t\t\tutils.extend( Mode.options, initialOpts ) : initialOpts;\n\t\t// init layout mode instance\n\t\tthis.modes[ name ] = new Mode( this );\n\t};\n\n\n\tproto.layout = function() {\n\t\t// if first time doing layout, do all magic\n\t\tif ( !this._isLayoutInited && this._getOption('initLayout') ) {\n\t\t\tthis.arrange();\n\t\t\treturn;\n\t\t}\n\t\tthis._layout();\n\t};\n\n\t// private method to be used in layout() & magic()\n\tproto._layout = function() {\n\t\t// don't animate first layout\n\t\tvar isInstant = this._getIsInstant();\n\t\t// layout flow\n\t\tthis._resetLayout();\n\t\tthis._manageStamps();\n\t\tthis.layoutItems( this.filteredItems, isInstant );\n\n\t\t// flag for initalized\n\t\tthis._isLayoutInited = true;\n\t};\n\n\t// filter + sort + layout\n\tproto.arrange = function( opts ) {\n\t\t// set any options pass\n\t\tthis.option( opts );\n\t\tthis._getIsInstant();\n\t\t// filter, sort, and layout\n\n\t\t// filter\n\t\tvar filtered = this._filter( this.items );\n\t\tthis.filteredItems = filtered.matches;\n\n\t\tthis._bindArrangeComplete();\n\n\t\tif ( this._isInstant ) {\n\t\t\tthis._noTransition( this._hideReveal, [ filtered ] );\n\t\t} else {\n\t\t\tthis._hideReveal( filtered );\n\t\t}\n\n\t\tthis._sort();\n\t\tthis._layout();\n\t};\n\t// alias to _init for main plugin method\n\tproto._init = proto.arrange;\n\n\tproto._hideReveal = function( filtered ) {\n\t\tthis.reveal( filtered.needReveal );\n\t\tthis.hide( filtered.needHide );\n\t};\n\n\t// HACK\n\t// Don't animate/transition first layout\n\t// Or don't animate/transition other layouts\n\tproto._getIsInstant = function() {\n\t\tvar isLayoutInstant = this._getOption('layoutInstant');\n\t\tvar isInstant = isLayoutInstant !== undefined ? isLayoutInstant :\n\t\t\t!this._isLayoutInited;\n\t\tthis._isInstant = isInstant;\n\t\treturn isInstant;\n\t};\n\n\t// listen for layoutComplete, hideComplete and revealComplete\n\t// to trigger arrangeComplete\n\tproto._bindArrangeComplete = function() {\n\t\t// listen for 3 events to trigger arrangeComplete\n\t\tvar isLayoutComplete, isHideComplete, isRevealComplete;\n\t\tvar _this = this;\n\t\tfunction arrangeParallelCallback() {\n\t\t\tif ( isLayoutComplete && isHideComplete && isRevealComplete ) {\n\t\t\t\t_this.dispatchEvent( 'arrangeComplete', null, [ _this.filteredItems ] );\n\t\t\t}\n\t\t}\n\t\tthis.once( 'layoutComplete', function() {\n\t\t\tisLayoutComplete = true;\n\t\t\tarrangeParallelCallback();\n\t\t});\n\t\tthis.once( 'hideComplete', function() {\n\t\t\tisHideComplete = true;\n\t\t\tarrangeParallelCallback();\n\t\t});\n\t\tthis.once( 'revealComplete', function() {\n\t\t\tisRevealComplete = true;\n\t\t\tarrangeParallelCallback();\n\t\t});\n\t};\n\n\t// -------------------------- filter -------------------------- //\n\n\tproto._filter = function( items ) {\n\t\tvar filter = this.options.filter;\n\t\tfilter = filter || '*';\n\t\tvar matches = [];\n\t\tvar hiddenMatched = [];\n\t\tvar visibleUnmatched = [];\n\n\t\tvar test = this._getFilterTest( filter );\n\n\t\t// test each item\n\t\tfor ( var i=0; i < items.length; i++ ) {\n\t\t\tvar item = items[i];\n\t\t\tif ( item.isIgnored ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// add item to either matched or unmatched group\n\t\t\tvar isMatched = test( item );\n\t\t\t// item.isFilterMatched = isMatched;\n\t\t\t// add to matches if its a match\n\t\t\tif ( isMatched ) {\n\t\t\t\tmatches.push( item );\n\t\t\t}\n\t\t\t// add to additional group if item needs to be hidden or revealed\n\t\t\tif ( isMatched && item.isHidden ) {\n\t\t\t\thiddenMatched.push( item );\n\t\t\t} else if ( !isMatched && !item.isHidden ) {\n\t\t\t\tvisibleUnmatched.push( item );\n\t\t\t}\n\t\t}\n\n\t\t// return collections of items to be manipulated\n\t\treturn {\n\t\t\tmatches: matches,\n\t\t\tneedReveal: hiddenMatched,\n\t\t\tneedHide: visibleUnmatched\n\t\t};\n\t};\n\n\t// get a jQuery, function, or a matchesSelector test given the filter\n\tproto._getFilterTest = function( filter ) {\n\t\tif ( jQuery && this.options.isJQueryFiltering ) {\n\t\t\t// use jQuery\n\t\t\treturn function( item ) {\n\t\t\t\treturn jQuery( item.element ).is( filter );\n\t\t\t};\n\t\t}\n\t\tif ( typeof filter == 'function' ) {\n\t\t\t// use filter as function\n\t\t\treturn function( item ) {\n\t\t\t\treturn filter( item.element );\n\t\t\t};\n\t\t}\n\t\t// default, use filter as selector string\n\t\treturn function( item ) {\n\t\t\treturn matchesSelector( item.element, filter );\n\t\t};\n\t};\n\n\t// -------------------------- sorting -------------------------- //\n\n\t/**\n\t * @params {Array} elems\n\t * @public\n\t */\n\tproto.updateSortData = function( elems ) {\n\t\t// get items\n\t\tvar items;\n\t\tif ( elems ) {\n\t\t\telems = utils.makeArray( elems );\n\t\t\titems = this.getItems( elems );\n\t\t} else {\n\t\t\t// update all items if no elems provided\n\t\t\titems = this.items;\n\t\t}\n\n\t\tthis._getSorters();\n\t\tthis._updateItemsSortData( items );\n\t};\n\n\tproto._getSorters = function() {\n\t\tvar getSortData = this.options.getSortData;\n\t\tfor ( var key in getSortData ) {\n\t\t\tvar sorter = getSortData[ key ];\n\t\t\tthis._sorters[ key ] = mungeSorter( sorter );\n\t\t}\n\t};\n\n\t/**\n\t * @params {Array} items - of Isotope.Items\n\t * @private\n\t */\n\tproto._updateItemsSortData = function( items ) {\n\t\t// do not update if no items\n\t\tvar len = items && items.length;\n\n\t\tfor ( var i=0; len && i < len; i++ ) {\n\t\t\tvar item = items[i];\n\t\t\titem.updateSortData();\n\t\t}\n\t};\n\n\t// ----- munge sorter ----- //\n\n\t// encapsulate this, as we just need mungeSorter\n\t// other functions in here are just for munging\n\tvar mungeSorter = ( function() {\n\t\t// add a magic layer to sorters for convienent shorthands\n\t\t// `.foo-bar` will use the text of .foo-bar querySelector\n\t\t// `[foo-bar]` will use attribute\n\t\t// you can also add parser\n\t\t// `.foo-bar parseInt` will parse that as a number\n\t\tfunction mungeSorter( sorter ) {\n\t\t\t// if not a string, return function or whatever it is\n\t\t\tif ( typeof sorter != 'string' ) {\n\t\t\t\treturn sorter;\n\t\t\t}\n\t\t\t// parse the sorter string\n\t\t\tvar args = trim( sorter ).split(' ');\n\t\t\tvar query = args[0];\n\t\t\t// check if query looks like [an-attribute]\n\t\t\tvar attrMatch = query.match( /^\\[(.+)\\]$/ );\n\t\t\tvar attr = attrMatch && attrMatch[1];\n\t\t\tvar getValue = getValueGetter( attr, query );\n\t\t\t// use second argument as a parser\n\t\t\tvar parser = Isotope.sortDataParsers[ args[1] ];\n\t\t\t// parse the value, if there was a parser\n\t\t\tsorter = parser ? function( elem ) {\n\t\t\t\t\treturn elem && parser( getValue( elem ) );\n\t\t\t\t} :\n\t\t\t\t// otherwise just return value\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem && getValue( elem );\n\t\t\t\t};\n\n\t\t\treturn sorter;\n\t\t}\n\n\t\t// get an attribute getter, or get text of the querySelector\n\t\tfunction getValueGetter( attr, query ) {\n\t\t\t// if query looks like [foo-bar], get attribute\n\t\t\tif ( attr ) {\n\t\t\t\treturn function getAttribute( elem ) {\n\t\t\t\t\treturn elem.getAttribute( attr );\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// otherwise, assume its a querySelector, and get its text\n\t\t\treturn function getChildText( elem ) {\n\t\t\t\tvar child = elem.querySelector( query );\n\t\t\t\treturn child && child.textContent;\n\t\t\t};\n\t\t}\n\n\t\treturn mungeSorter;\n\t})();\n\n\t// parsers used in getSortData shortcut strings\n\tIsotope.sortDataParsers = {\n\t\t'parseInt': function( val ) {\n\t\t\treturn parseInt( val, 10 );\n\t\t},\n\t\t'parseFloat': function( val ) {\n\t\t\treturn parseFloat( val );\n\t\t}\n\t};\n\n\t// ----- sort method ----- //\n\n\t// sort filteredItem order\n\tproto._sort = function() {\n\t\tif ( !this.options.sortBy ) {\n\t\t\treturn;\n\t\t}\n\t\t// keep track of sortBy History\n\t\tvar sortBys = utils.makeArray( this.options.sortBy );\n\t\tif ( !this._getIsSameSortBy( sortBys ) ) {\n\t\t\t// concat all sortBy and sortHistory, add to front, oldest goes in last\n\t\t\tthis.sortHistory = sortBys.concat( this.sortHistory );\n\t\t}\n\t\t// sort magic\n\t\tvar itemSorter = getItemSorter( this.sortHistory, this.options.sortAscending );\n\t\tthis.filteredItems.sort( itemSorter );\n\t};\n\n\t// check if sortBys is same as start of sortHistory\n\tproto._getIsSameSortBy = function( sortBys ) {\n\t\tfor ( var i=0; i < sortBys.length; i++ ) {\n\t\t\tif ( sortBys[i] != this.sortHistory[i] ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t};\n\n\t// returns a function used for sorting\n\tfunction getItemSorter( sortBys, sortAsc ) {\n\t\treturn function sorter( itemA, itemB ) {\n\t\t\t// cycle through all sortKeys\n\t\t\tfor ( var i = 0; i < sortBys.length; i++ ) {\n\t\t\t\tvar sortBy = sortBys[i];\n\t\t\t\tvar a = itemA.sortData[ sortBy ];\n\t\t\t\tvar b = itemB.sortData[ sortBy ];\n\t\t\t\tif ( a > b || a < b ) {\n\t\t\t\t\t// if sortAsc is an object, use the value given the sortBy key\n\t\t\t\t\tvar isAscending = sortAsc[ sortBy ] !== undefined ? sortAsc[ sortBy ] : sortAsc;\n\t\t\t\t\tvar direction = isAscending ? 1 : -1;\n\t\t\t\t\treturn ( a > b ? 1 : -1 ) * direction;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn 0;\n\t\t};\n\t}\n\n\t// -------------------------- methods -------------------------- //\n\n\t// get layout mode\n\tproto._mode = function() {\n\t\tvar layoutMode = this.options.layoutMode;\n\t\tvar mode = this.modes[ layoutMode ];\n\t\tif ( !mode ) {\n\t\t\t// TODO console.error\n\t\t\tthrow new Error( 'No layout mode: ' + layoutMode );\n\t\t}\n\t\t// HACK sync mode's options\n\t\t// any options set after init for layout mode need to be synced\n\t\tmode.options = this.options[ layoutMode ];\n\t\treturn mode;\n\t};\n\n\tproto._resetLayout = function() {\n\t\t// trigger original reset layout\n\t\tOutlayer.prototype._resetLayout.call( this );\n\t\tthis._mode()._resetLayout();\n\t};\n\n\tproto._getItemLayoutPosition = function( item  ) {\n\t\treturn this._mode()._getItemLayoutPosition( item );\n\t};\n\n\tproto._manageStamp = function( stamp ) {\n\t\tthis._mode()._manageStamp( stamp );\n\t};\n\n\tproto._getContainerSize = function() {\n\t\treturn this._mode()._getContainerSize();\n\t};\n\n\tproto.needsResizeLayout = function() {\n\t\treturn this._mode().needsResizeLayout();\n\t};\n\n\t// -------------------------- adding & removing -------------------------- //\n\n\t// HEADS UP overwrites default Outlayer appended\n\tproto.appended = function( elems ) {\n\t\tvar items = this.addItems( elems );\n\t\tif ( !items.length ) {\n\t\t\treturn;\n\t\t}\n\t\t// filter, layout, reveal new items\n\t\tvar filteredItems = this._filterRevealAdded( items );\n\t\t// add to filteredItems\n\t\tthis.filteredItems = this.filteredItems.concat( filteredItems );\n\t};\n\n\t// HEADS UP overwrites default Outlayer prepended\n\tproto.prepended = function( elems ) {\n\t\tvar items = this._itemize( elems );\n\t\tif ( !items.length ) {\n\t\t\treturn;\n\t\t}\n\t\t// start new layout\n\t\tthis._resetLayout();\n\t\tthis._manageStamps();\n\t\t// filter, layout, reveal new items\n\t\tvar filteredItems = this._filterRevealAdded( items );\n\t\t// layout previous items\n\t\tthis.layoutItems( this.filteredItems );\n\t\t// add to items and filteredItems\n\t\tthis.filteredItems = filteredItems.concat( this.filteredItems );\n\t\tthis.items = items.concat( this.items );\n\t};\n\n\tproto._filterRevealAdded = function( items ) {\n\t\tvar filtered = this._filter( items );\n\t\tthis.hide( filtered.needHide );\n\t\t// reveal all new items\n\t\tthis.reveal( filtered.matches );\n\t\t// layout new items, no transition\n\t\tthis.layoutItems( filtered.matches, true );\n\t\treturn filtered.matches;\n\t};\n\n\t/**\n\t * Filter, sort, and layout newly-appended item elements\n\t * @param {Array or NodeList or Element} elems\n\t */\n\tproto.insert = function( elems ) {\n\t\tvar items = this.addItems( elems );\n\t\tif ( !items.length ) {\n\t\t\treturn;\n\t\t}\n\t\t// append item elements\n\t\tvar i, item;\n\t\tvar len = items.length;\n\t\tfor ( i=0; i < len; i++ ) {\n\t\t\titem = items[i];\n\t\t\tthis.element.appendChild( item.element );\n\t\t}\n\t\t// filter new stuff\n\t\tvar filteredInsertItems = this._filter( items ).matches;\n\t\t// set flag\n\t\tfor ( i=0; i < len; i++ ) {\n\t\t\titems[i].isLayoutInstant = true;\n\t\t}\n\t\tthis.arrange();\n\t\t// reset flag\n\t\tfor ( i=0; i < len; i++ ) {\n\t\t\tdelete items[i].isLayoutInstant;\n\t\t}\n\t\tthis.reveal( filteredInsertItems );\n\t};\n\n\tvar _remove = proto.remove;\n\tproto.remove = function( elems ) {\n\t\telems = utils.makeArray( elems );\n\t\tvar removeItems = this.getItems( elems );\n\t\t// do regular thing\n\t\t_remove.call( this, elems );\n\t\t// bail if no items to remove\n\t\tvar len = removeItems && removeItems.length;\n\t\t// remove elems from filteredItems\n\t\tfor ( var i=0; len && i < len; i++ ) {\n\t\t\tvar item = removeItems[i];\n\t\t\t// remove item from collection\n\t\t\tutils.removeFrom( this.filteredItems, item );\n\t\t}\n\t};\n\n\tproto.shuffle = function() {\n\t\t// update random sortData\n\t\tfor ( var i=0; i < this.items.length; i++ ) {\n\t\t\tvar item = this.items[i];\n\t\t\titem.sortData.random = Math.random();\n\t\t}\n\t\tthis.options.sortBy = 'random';\n\t\tthis._sort();\n\t\tthis._layout();\n\t};\n\n\t/**\n\t * trigger fn without transition\n\t * kind of hacky to have this in the first place\n\t * @param {Function} fn\n\t * @param {Array} args\n\t * @returns ret\n\t * @private\n\t */\n\tproto._noTransition = function( fn, args ) {\n\t\t// save transitionDuration before disabling\n\t\tvar transitionDuration = this.options.transitionDuration;\n\t\t// disable transition\n\t\tthis.options.transitionDuration = 0;\n\t\t// do it\n\t\tvar returnValue = fn.apply( this, args );\n\t\t// re-enable transition for reveal\n\t\tthis.options.transitionDuration = transitionDuration;\n\t\treturn returnValue;\n\t};\n\n\t// ----- helper methods ----- //\n\n\t/**\n\t * getter method for getting filtered item elements\n\t * @returns {Array} elems - collection of item elements\n\t */\n\tproto.getFilteredItemElements = function() {\n\t\treturn this.filteredItems.map( function( item ) {\n\t\t\treturn item.element;\n\t\t});\n\t};\n\n\t// -----  ----- //\n\n\treturn Isotope;\n\n}));\n"]}